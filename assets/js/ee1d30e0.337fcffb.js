"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[218],{30876:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>y});var l=t(2784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,l,a=function(e,n){if(null==e)return{};var t,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)t=i[l],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)t=i[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=l.createContext({}),p=function(e){var n=l.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=p(e.components);return l.createElement(u.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},m=l.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=p(t),m=a,y=c["".concat(u,".").concat(m)]||c[m]||g[m]||i;return t?l.createElement(y,r(r({ref:n},s),{},{components:t})):l.createElement(y,r({ref:n},s))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=m;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[c]="string"==typeof e?e:a,r[1]=o;for(var p=2;p<i;p++)r[p]=t[p];return l.createElement.apply(null,r)}return l.createElement.apply(null,t)}m.displayName="MDXCreateElement"},62398:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var l=t(7896),a=(t(2784),t(30876));const i={layout:"page",path:"/postgraphile/make-change-nullability-plugin/",title:"makeChangeNullabilityPlugin"},r=void 0,o={unversionedId:"make-change-nullability-plugin",id:"make-change-nullability-plugin",title:"makeChangeNullabilityPlugin",description:"Use this plugin to easily change the nullability of fields and arguments in",source:"@site/postgraphile/make-change-nullability-plugin.md",sourceDirName:".",slug:"/make-change-nullability-plugin",permalink:"/postgraphile/next/make-change-nullability-plugin",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/postgraphile/make-change-nullability-plugin.md",tags:[],version:"current",frontMatter:{layout:"page",path:"/postgraphile/make-change-nullability-plugin/",title:"makeChangeNullabilityPlugin"},sidebar:"docs",previous:{title:"Adding and replacing inflectors",permalink:"/postgraphile/next/make-add-inflectors-plugin"},next:{title:"makeExtendSchemaPlugin",permalink:"/postgraphile/next/make-extend-schema-plugin"}},u={},p=[{value:"Function signature",id:"function-signature",level:2},{value:"Example",id:"example",level:2}],s={toc:p},c="wrapper";function g(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,l.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Use this plugin to easily change the nullability of fields and arguments in\nyour GraphQL schema."),(0,a.kt)("p",null,"For more information about nullability in PostGraphile in general (and to help\ndetermine if the change that you want to make is wise or misguided), see the\nFAQ question ",(0,a.kt)("a",{parentName:"p",href:"./why-nullable/"},'"Why is it nullable?"')),(0,a.kt)("h2",{id:"function-signature"},"Function signature"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"makeChangeNullabilityPlugin")," function accepts one parameter, a rules object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function makeChangeNullabilityPlugin(\n  rules: ChangeNullabilityRules,\n): GraphileConfig.Plugin;\n\ninterface ChangeNullabilityRules {\n  [typeName: string]: {\n    [fieldName: string]:\n      | NullabilitySpecString\n      | {\n          type?: NullabilitySpecString;\n          args?: {\n            [argName: string]: NullabilitySpecString;\n          };\n        };\n  };\n}\n")),(0,a.kt)("p",null,"Note that the format allows you to indicate the nullability for a field\ndirectly, or to pass an object in which you can indicate the field nullability\nand the nullability of that field's arguments at the same time."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"NullabilitySpecString")," uses syntax similar to GraphQL's SDL to define the\nnullability of a field, including control over lists and nested lists:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'export type NullabilitySpecString =\n  | "" // nullable\n  | "!" // non-nullable\n  | "[]" // nullable list of nullables\n  | "[]!" // non-nullable list of nullables\n  | "[!]" // nullable list of non-nullables\n  | "[!]!"\n  | "[[]]"\n  | "[[]]!"\n  | "[[]!]"\n  | "[[]!]!"\n  | "[[!]]"\n  | "[[!]]!"\n  | "[[!]!]"\n  | "[[!]!]!";\n')),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"To indicate that ",(0,a.kt)("inlineCode",{parentName:"p"},"UsersConnection.nodes")," should be a non-nullable list of\nnon-nullables you would do:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { makeChangeNullabilityPlugin } from "postgraphile/utils";\n\nconst MyNullabilityPlugin = makeChangeNullabilityPlugin({\n  UsersConnection: {\n    nodes: "[!]!",\n  },\n});\n')))}g.isMDXComponent=!0}}]);