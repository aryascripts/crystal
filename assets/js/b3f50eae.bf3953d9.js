"use strict";(self.webpackChunk_localrepo_grafast_website=self.webpackChunk_localrepo_grafast_website||[]).push([[8465],{30876:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var l=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=l.createContext({}),p=function(e){var t=l.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return l.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},g=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),g=a,m=d["".concat(o,".").concat(g)]||d[g]||u[g]||i;return n?l.createElement(m,r(r({ref:t},c),{},{components:n})):l.createElement(m,r({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=g;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:a,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}g.displayName="MDXCreateElement"},88345:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var l=n(7896),a=(n(2784),n(30876));const i={sidebar_position:2},r="pgSelect and pgSelectSingle",s={unversionedId:"step-library/dataplan-pg/pgSelect",id:"step-library/dataplan-pg/pgSelect",title:"pgSelect and pgSelectSingle",description:"Though you don't typically create a pgSelect() or pgSelectSingle() step",source:"@site/grafast/step-library/dataplan-pg/pgSelect.md",sourceDirName:"step-library/dataplan-pg",slug:"/step-library/dataplan-pg/pgSelect",permalink:"/grafast/step-library/dataplan-pg/pgSelect",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/grafast/website/grafast/step-library/dataplan-pg/pgSelect.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Adaptors",permalink:"/grafast/step-library/dataplan-pg/adaptors"},next:{title:"pgClassExpression",permalink:"/grafast/step-library/dataplan-pg/pgClassExpression"}},o={},p=[{value:"pgSelect",id:"pgselect",level:2},{value:"$pgSelect.alias",id:"pgselectalias",level:3},{value:"$pgSelect.single()",id:"pgselectsingle",level:3},{value:"$pgSelect.singleAsRecord()",id:"pgselectsingleasrecord",level:3},{value:"$pgSelect.row($row)",id:"pgselectrowrow",level:3},{value:"$pgSelect.orderBy(spec)",id:"pgselectorderbyspec",level:3},{value:"Example",id:"example",level:4},{value:"$pgSelect.setOrderIsUnique()",id:"pgselectsetorderisunique",level:3},{value:"$pgSelect.where(condition)",id:"pgselectwherecondition",level:3},{value:"$pgSelect.placeholder($step, codec)",id:"pgselectplaceholderstep-codec",level:3},{value:"$pgSelect.singleRelation(relationName)",id:"pgselectsinglerelationrelationname",level:3},{value:"$pgSelect.wherePlan()",id:"pgselectwhereplan",level:3},{value:"$pgSelect.setFirst($n)",id:"pgselectsetfirstn",level:3},{value:"$pgSelect.setLast($n)",id:"pgselectsetlastn",level:3},{value:"$pgSelect.setOffset($n)",id:"pgselectsetoffsetn",level:3},{value:"$pgSelect.groupBy(spec)",id:"pgselectgroupbyspec",level:3},{value:"$pgSelect.having(condition)",id:"pgselecthavingcondition",level:3},{value:"$pgSelect.havingPlan()",id:"pgselecthavingplan",level:3},{value:"$pgSelect.setUnique()",id:"pgselectsetunique",level:3},{value:"$pgSelect.hasMore()",id:"pgselecthasmore",level:3},{value:"$pgSelect.setInliningForbidden()",id:"pgselectsetinliningforbidden",level:3},{value:"$pgSelect.setTrusted()",id:"pgselectsettrusted",level:3},{value:"pgSelectSingle",id:"pgselectsingle-1",level:2},{value:"$pgSelectSingle.get(attr)",id:"pgselectsinglegetattr",level:3},{value:"$pgSelectSingle.select(fragment, codec)",id:"pgselectsingleselectfragment-codec",level:3},{value:"$pgSelectSingle.placeholder($step, codec)",id:"pgselectsingleplaceholderstep-codec",level:3},{value:"$pgSelectSingle.singleRelation(relationName)",id:"pgselectsinglesinglerelationrelationname",level:3},{value:"$pgSelectSingle.manyRelation(relationName)",id:"pgselectsinglemanyrelationrelationname",level:3},{value:"$pgSelectSingle.record()",id:"pgselectsinglerecord",level:3},{value:"$pgSelectSingle.cursor()",id:"pgselectsinglecursor",level:3},{value:"$pgSelectSingle.getClassStep()",id:"pgselectsinglegetclassstep",level:3},{value:"pgSelectFromRecords(resource, $records)",id:"pgselectfromrecordsresource-records",level:2},{value:"pgSelectFromRecord(resource, $record)",id:"pgselectfromrecordresource-record",level:2},{value:"pgSelectSingleFromRecord(resource, $record)",id:"pgselectsinglefromrecordresource-record",level:2},{value:"Opaque steps",id:"opaque-steps",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"pgselect-and-pgselectsingle"},"pgSelect and pgSelectSingle"),(0,a.kt)("p",null,"Though you don't typically create a ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelectSingle()")," step\nmanually (instead using the ",(0,a.kt)("inlineCode",{parentName:"p"},".get()"),", ",(0,a.kt)("inlineCode",{parentName:"p"},".find()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},".execute()")," methods on the\nrelevant resource), they are the step classes that you'll likely interact with\nthe most in ",(0,a.kt)("inlineCode",{parentName:"p"},"@dataplan/pg"),"."),(0,a.kt)("h2",{id:"pgselect"},"pgSelect"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect()")," represents a selection of rows from the database. You might get a\npgSelect instance such as ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelect")," in this example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// `pgSelect()` step representing all the messages in forum 1:\nconst $pgSelect = registry.pgResources.messages.find({ forum_id: constant(1) });\n")),(0,a.kt)("p",null,"Once you have access to a ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect()")," step, you may use its various methods to\nadd conditions, reorder it, add pagination limits, and so on."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can only make these changes whilst planning the field in which the\n",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect()")," was created. Once that field plan is finalized (via the Gra",(0,a.kt)("em",{parentName:"p"},"fast"),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"deduplicate")," lifecycle event) any changes to conditions, ordering, etc may\ncause your schema to violate the GraphQL specification, and thus these actions\nare forbidden.")),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"If you are using a pgSelect in a mutation plan resolver, and that pgSelect has\nside effects (e.g. calls a ",(0,a.kt)("inlineCode",{parentName:"p"},"VOLATILE")," database function), then ensure that the\n",(0,a.kt)("a",{parentName:"p",href:"./registry/resources"},"resource")," representing the function is correctly\nconfigured with ",(0,a.kt)("inlineCode",{parentName:"p"},"isMutation: true")," and that you are creating the step through\n",(0,a.kt)("inlineCode",{parentName:"p"},"resource.execute()"),". (If this is not done then in some circumstances it's\npossible that the step may be tree-shaken away and thus the side effects may\nnever occur.)"),(0,a.kt)("p",{parentName:"admonition"},"(Alternatively, if creating the ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect")," directly, create it with\n",(0,a.kt)("inlineCode",{parentName:"p"},'mode="mutation"'),", or set ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelect.hasSideEffects = true;"),".)")),(0,a.kt)("p",null,"Below we've documenting the most commonly used properties and methods, for full\ndocumentation you should explore the methods and their types through\nTypeScript."),(0,a.kt)("p",null,"Note that methods that are generally used internally or via helper steps such\nas ",(0,a.kt)("inlineCode",{parentName:"p"},"connection()")," have not been documented because you typically won't call\nthese yourself."),(0,a.kt)("h3",{id:"pgselectalias"},"$pgSelect.alias"),(0,a.kt)("p",null,"Since the same table might appear multiple times in the resulting query (once\nthe queries have been inlined/merged), each $pgSelect is given its own alias.\nThe alias is an SQL fragment representing the underlying table, useful so that\nyou can reference a column of the table or similar:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const $users = usersResource.find();\nconst tbl = $users.alias;\n$users.where(sql`${tbl}.username = 'Benjie'`);\n")),(0,a.kt)("h3",{id:"pgselectsingle"},"$pgSelect.single()"),(0,a.kt)("p",null,"If this plan may only return one record, you can use ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelect.single()")," to\nreturn a plan that resolves to either that record (in the case of composite\ntypes) or the underlying scalar (in the case of a resource whose codec has no\nattributes)."),(0,a.kt)("p",null,"Beware: if you call this and the database might actually return more than\none record then you're potentially in for a Bad Time."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// Instead of:\n//     const $user = usersResource.get({ id: constant(1) });\n// you could do:\nconst $user = usersResource.find({ id: constant(1) }).single();\n")),(0,a.kt)("h3",{id:"pgselectsingleasrecord"},"$pgSelect.singleAsRecord()"),(0,a.kt)("p",null,"Most likely you want ",(0,a.kt)("inlineCode",{parentName:"p"},".single()")," instead; only use this if you specifically\nneed a ",(0,a.kt)("inlineCode",{parentName:"p"},"PgSelectSingleStep")," instance even though you're querying a scalar."),(0,a.kt)("h3",{id:"pgselectrowrow"},"$pgSelect.row($row)"),(0,a.kt)("p",null,"You can use this to create a ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelectSingle")," instance based on an arbitrary\nentry from a ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelect"),", e.g. to get the first row from a ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelect")," set as a\n",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelectSingle")," you might do:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const $row = $pgSelect.row(first($pgSelect));\n")),(0,a.kt)("h3",{id:"pgselectorderbyspec"},"$pgSelect.orderBy(spec)"),(0,a.kt)("p",null,"Adds an ordering clause to the query. Can be called multiple times to add more\nordering clauses, these are always appended to the existing list."),(0,a.kt)("p",null,"The argument can either be an attribute spec, an object with the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"attribute")," (required) - the name of the attribute to sort by, must be one of the attributes on the codec the $pgSelect represents"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"callback")," (optional) - used to wrap the attribute in an expression"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"direction")," (required) - ",(0,a.kt)("inlineCode",{parentName:"li"},'"ASC"')," or ",(0,a.kt)("inlineCode",{parentName:"li"},'"DESC"')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nulls")," (optional) - ",(0,a.kt)("inlineCode",{parentName:"li"},'"FIRST"')," or ",(0,a.kt)("inlineCode",{parentName:"li"},'"LAST"')," or ",(0,a.kt)("inlineCode",{parentName:"li"},"null"))),(0,a.kt)("p",null,"or a fragment spec, an object with the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fragment")," (required) - an SQL expression to order by"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"codec")," (required) - the codec that matches the type of the expression in ",(0,a.kt)("inlineCode",{parentName:"li"},"fragment")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"direction")," (required) - ",(0,a.kt)("inlineCode",{parentName:"li"},'"ASC"')," or ",(0,a.kt)("inlineCode",{parentName:"li"},'"DESC"')),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nulls")," (optional) - ",(0,a.kt)("inlineCode",{parentName:"li"},'"FIRST"')," or ",(0,a.kt)("inlineCode",{parentName:"li"},'"LAST"')," or ",(0,a.kt)("inlineCode",{parentName:"li"},"null"))),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'// Get a pgSelect:\nconst $users = usersResource.find();\n\n// Sort by username length\n$users.orderBy({\n  attribute: "username",\n  callback(usernameExpression, codec) {\n    return [sql`length(${usernameExpression})`, TYPES.int];\n  },\n  direction: "ASC",\n  nulls: "LAST",\n});\n\n// Sort within that by user id\n$users.orderBy({ attribute: "id", direction: "ASC" });\n\n// Result is something like:\n// `SELECT ... FROM users ORDER BY length(username) ASC NULLS LAST, id ASC`\n')),(0,a.kt)("h3",{id:"pgselectsetorderisunique"},"$pgSelect.setOrderIsUnique()"),(0,a.kt)("p",null,"Call this if you are certain that the order that you've specified is sufficient\nto ensure that there are no ambiguities in the ordering (i.e. it is stable). If\nyou don't do this then we might (if unique order is required, for example for\ncursor pagination) add the primary key or similar unique constraint to the\nordering in order to make it stable."),(0,a.kt)("h3",{id:"pgselectwherecondition"},"$pgSelect.where(condition)"),(0,a.kt)("p",null,"Adds a ",(0,a.kt)("inlineCode",{parentName:"p"},"WHERE")," clause to the query, can be called multiple times and the\nconditions will be appended with ",(0,a.kt)("inlineCode",{parentName:"p"},"AND"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const $users = usersResource.find();\nconst tbl = $users.alias;\n$users.where(sql`${tbl}.username = 'Benjie'`);\n")),(0,a.kt)("h3",{id:"pgselectplaceholderstep-codec"},"$pgSelect.placeholder($step, codec)"),(0,a.kt)("p",null,"Placeholder accepts an arbitrary step and a codec representing what its SQL\ntype should be (optional if the step already contains details of the codec) and\nreturns an SQL expression that allows the value of the step to be referenced\ninside an SQL query."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const $users = usersResource.find();\nconst tbl = $users.alias;\n\nconst $username = fieldArgs.get("username");\nconst frag = $users.placeholder($username, TYPES.citext);\n\n$users.where(sql`${tbl}.username = ${frag}`);\n')),(0,a.kt)("h3",{id:"pgselectsinglerelationrelationname"},"$pgSelect.singleRelation(relationName)"),(0,a.kt)("p",null,"Forces the ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelect")," to do a left join to the given relation and gives you an\nalias representing this join; useful for building conditions on related tables."),(0,a.kt)("p",null,"Note this method on ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect")," (collection) differs from the same named method\non ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelectSingle")," (row) which instead returns a step representing the related\nrecord."),(0,a.kt)("p",null,'Example: "return all the posts where the forum is not archived":'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const $posts = postsResource.find();\nconst forumAlias = $posts.singleRelation("forum");\n$posts.where(sql`${forumAlias}.is_archived = false`);\nreturn $posts;\n\n// Result is something like:\n// `SELECT ... FROM posts LEFT JOIN forums ON (...) WHERE forums.is_archived = false`\n')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"If the relationship is not unique then an error will be thrown.")),(0,a.kt)("h3",{id:"pgselectwhereplan"},"$pgSelect.wherePlan()"),(0,a.kt)("p",null,"Instead of adding conditions directly, this advanced method returns a\n",(0,a.kt)("inlineCode",{parentName:"p"},"PgConditionStep"),' (a "modifier step") which allows the condition to be built up\nin a different way. This is particularly useful if you are building deep\nfiltering arguments, using the ',(0,a.kt)("inlineCode",{parentName:"p"},"applyPlan")," plan resolver on arguments and input\nfields."),(0,a.kt)("h3",{id:"pgselectsetfirstn"},"$pgSelect.setFirst($n)"),(0,a.kt)("p",null,"Limits the number of records returned."),(0,a.kt)("p",null,"Currently this must be called with an input step (i.e. it must come from a\nGraphQL field argument or be a constant)."),(0,a.kt)("h3",{id:"pgselectsetlastn"},"$pgSelect.setLast($n)"),(0,a.kt)("p",null,"Limits the number of records returned, but instead of taking the first entries\nin the list, it takes the last ones."),(0,a.kt)("p",null,"Currently this must be called with an input step (i.e. it must come from a\nGraphQL field argument or be a constant)."),(0,a.kt)("h3",{id:"pgselectsetoffsetn"},"$pgSelect.setOffset($n)"),(0,a.kt)("p",null,"Skips over the given number of records, cannot be combined with ",(0,a.kt)("inlineCode",{parentName:"p"},"setLast"),"."),(0,a.kt)("p",null,"Currently this must be called with an input step (i.e. it must come from a\nGraphQL field argument or be a constant)."),(0,a.kt)("h3",{id:"pgselectgroupbyspec"},"$pgSelect.groupBy(spec)"),(0,a.kt)("p",null,"Instructs the query to add a ",(0,a.kt)("inlineCode",{parentName:"p"},"GROUP BY")," clause. Currently spec must be an\nobject with the following properties:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fragment")," (required) - an SQL fragment to indicate what to ",(0,a.kt)("inlineCode",{parentName:"li"},"GROUP BY"))),(0,a.kt)("h3",{id:"pgselecthavingcondition"},"$pgSelect.having(condition)"),(0,a.kt)("p",null,"Like ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelect.where(condition)"),", but for the ",(0,a.kt)("inlineCode",{parentName:"p"},"HAVING")," clause of a grouped\nquery and only supports the SQL fragment condition form."),(0,a.kt)("p",null,"TODO: THIS METHOD IS UNTESTED!"),(0,a.kt)("h3",{id:"pgselecthavingplan"},"$pgSelect.havingPlan()"),(0,a.kt)("p",null,"Like ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelect.wherePlan()")," but for the ",(0,a.kt)("inlineCode",{parentName:"p"},"HAVING")," clause."),(0,a.kt)("p",null,"TODO: THIS METHOD IS UNTESTED!"),(0,a.kt)("h3",{id:"pgselectsetunique"},"$pgSelect.setUnique()"),(0,a.kt)("p",null,"Call this ONLY if there can be at most one matching row. If you set this true\nwhen this is not the case then you may get unexpected results during inlining;\nif in doubt leave it at the default."),(0,a.kt)("h3",{id:"pgselecthasmore"},"$pgSelect.hasMore()"),(0,a.kt)("p",null,"Returns a step indicating if there's a next page or not (by selecting 1 extra\nrow and throwing it away). Typically this is used by the ",(0,a.kt)("inlineCode",{parentName:"p"},"connection()")," steps\n",(0,a.kt)("inlineCode",{parentName:"p"},"pageInfo")," logic and you wouldn't call it yourself."),(0,a.kt)("h3",{id:"pgselectsetinliningforbidden"},"$pgSelect.setInliningForbidden()"),(0,a.kt)("p",null,"Call this if you wish to prevent this query from being inlined into its parent.\nYou may want to do this to work around a performance issue, or to improve the\ncacheability of the step."),(0,a.kt)("h3",{id:"pgselectsettrusted"},"$pgSelect.setTrusted()"),(0,a.kt)("p",null,"By default, all ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect")," steps will apply the authorization checks that their\nresource specifies, for example to apply conditions similar to row-level\nsecurity. Call this if you wish to bypass this behavior, for example if you know\nthat the conditions would pass because the parent was visible."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const plans = {\n  Forum: {\n    posts($forum) {\n      const $posts = postsResource.find({ forum_id: $forum.get("id") });\n\n      // If we can see the forum, then we can see all the posts inside the\n      // forum, so don\'t bother adding the access conditions:\n      $posts.setTrusted();\n\n      return $posts;\n    },\n  },\n};\n')),(0,a.kt)("h2",{id:"pgselectsingle-1"},"pgSelectSingle"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"pgSelectSingle()")," represents a single row from within a ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect()"),"\ncollection. Typically you wouldn't build an instance of this directly, instead\nyou'd get it from ",(0,a.kt)("inlineCode",{parentName:"p"},"resource.get()"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"resource.execute()")," (for isUnique\nfunctions), from the entries in a list from a ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect"),", or via\n",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelect.single()"),"."),(0,a.kt)("p",null,"Here are some of the more commonly used methods:"),(0,a.kt)("h3",{id:"pgselectsinglegetattr"},"$pgSelectSingle.get(attr)"),(0,a.kt)("p",null,"The absolute most commonly used method on a ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelectSingle"),", this gets a step\nrepresenting the value of the given attribute from the row."),(0,a.kt)("admonition",{type:"important"},(0,a.kt)("p",{parentName:"admonition"},"You must always use ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelectSingle.get(attr)")," rather than\n",(0,a.kt)("inlineCode",{parentName:"p"},"access($pgSelectSingle, attr)")," or similar for multiple reasons:"),(0,a.kt)("ol",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ol"},"the data a ",(0,a.kt)("inlineCode",{parentName:"li"},"pgSelectSingle")," contains is an unpredictable tuple (see ",(0,a.kt)("a",{parentName:"li",href:"#opaque-steps"},"Opaque steps")," below),"),(0,a.kt)("li",{parentName:"ol"},"the ",(0,a.kt)("inlineCode",{parentName:"li"},".get(attr)")," tells the related ",(0,a.kt)("inlineCode",{parentName:"li"},"pgSelect")," step to add the ",(0,a.kt)("inlineCode",{parentName:"li"},"attr")," to the list of expressions to ",(0,a.kt)("inlineCode",{parentName:"li"},"SELECT")))),(0,a.kt)("h3",{id:"pgselectsingleselectfragment-codec"},"$pgSelectSingle.select(fragment, codec)"),(0,a.kt)("p",null,"Returns a PgClassExpressionStep representing the value of the given SQL\nexpression."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const $user = usersResource.find({ id: constant(1) });\nconst $usernameLength = $user.select(sql`length(username)`, TYPES.int);\n")),(0,a.kt)("h3",{id:"pgselectsingleplaceholderstep-codec"},"$pgSelectSingle.placeholder($step, codec)"),(0,a.kt)("p",null,"Identical to ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelect.placeholder($step, codec)")," on the underlying ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect")," step."),(0,a.kt)("h3",{id:"pgselectsinglesinglerelationrelationname"},"$pgSelectSingle.singleRelation(relationName)"),(0,a.kt)("p",null,"Returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelectSingle")," representing the single record related via the\n",(0,a.kt)("inlineCode",{parentName:"p"},"relationName")," relation."),(0,a.kt)("p",null,"Do not confuse with ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelect.singleRelation"),"."),(0,a.kt)("h3",{id:"pgselectsinglemanyrelationrelationname"},"$pgSelectSingle.manyRelation(relationName)"),(0,a.kt)("p",null,"Returns a ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect")," representing the records related via the\n",(0,a.kt)("inlineCode",{parentName:"p"},"relationName")," relation."),(0,a.kt)("h3",{id:"pgselectsinglerecord"},"$pgSelectSingle.record()"),(0,a.kt)("p",null,"Returns a PgClassExpressionStep representing the entire table, useful for debugging or to use with ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelectSingleFromRecord"),"."),(0,a.kt)("h3",{id:"pgselectsinglecursor"},"$pgSelectSingle.cursor()"),(0,a.kt)("p",null,"Returns a step representing the cursor of this row, typically used for\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"cursor")," field in a connection edge."),(0,a.kt)("h3",{id:"pgselectsinglegetclassstep"},"$pgSelectSingle.getClassStep()"),(0,a.kt)("p",null,"Returns the ",(0,a.kt)("inlineCode",{parentName:"p"},"PgSelectStep")," that this ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelectSingle")," came from. Useful to get\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"alias"),", among other things."),(0,a.kt)("h2",{id:"pgselectfromrecordsresource-records"},"pgSelectFromRecords(resource, $records)"),(0,a.kt)("p",null,"Builds a ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect")," step representing the multi-row data in ",(0,a.kt)("inlineCode",{parentName:"p"},"$records")," as if\nthey had come from the ",(0,a.kt)("inlineCode",{parentName:"p"},"resource")," resource."),(0,a.kt)("h2",{id:"pgselectfromrecordresource-record"},"pgSelectFromRecord(resource, $record)"),(0,a.kt)("p",null,"Builds a ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect")," step using the single-row data in ",(0,a.kt)("inlineCode",{parentName:"p"},"$record")," as if it had\ncome from the ",(0,a.kt)("inlineCode",{parentName:"p"},"resource")," resource."),(0,a.kt)("h2",{id:"pgselectsinglefromrecordresource-record"},"pgSelectSingleFromRecord(resource, $record)"),(0,a.kt)("p",null,"Equivalent to ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelectFromRecord(resource, $record).single()"),"."),(0,a.kt)("h2",{id:"opaque-steps"},"Opaque steps"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"pgSelect")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelectSingle"),' are what we call "opaque steps" - that is you\nare not intended to use their underlying data directly, instead you use their\nmethods to extract the data you need to use with other steps.'),(0,a.kt)("p",null,"Currently a ",(0,a.kt)("inlineCode",{parentName:"p"},"pgSelectSingle")," doesn't use the object representation you might\nexpect, instead it uses a tuple with entries for each of the selected\nattributes. The makeup of this tuple will vary depending on which attributes\nyou requested, and in which order, so you must not rely on its structure. To\nget an attribute you should use ",(0,a.kt)("inlineCode",{parentName:"p"},"$pgSelectSingle.get(attr)")," or similar"))}u.isMDXComponent=!0}}]);