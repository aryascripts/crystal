"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[3879],{30876:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),d=o,m=c["".concat(s,".").concat(d)]||c[d]||h[d]||a;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},55716:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7896),o=(n(2784),n(30876));const a={layout:"page",path:"/postgraphile/default-role/",title:"Default Role"},l=void 0,i={unversionedId:"default-role",id:"version-4.x/default-role",title:"Default Role",description:"PostGraphile makes full use of PostgreSQL roles, so in this article we will",source:"@site/versioned_docs/version-4.x/default-role.md",sourceDirName:".",slug:"/default-role",permalink:"/postgraphile/current/default-role",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/versioned_docs/version-4.x/default-role.md",tags:[],version:"4.x",frontMatter:{layout:"page",path:"/postgraphile/default-role/",title:"Default Role"},sidebar:"docs",previous:{title:"PostGraphile JWT/JWK Verification Quickstart",permalink:"/postgraphile/current/jwk-verification"},next:{title:"Migrating from the Supporter Plugin to @graphile/pg-pubsub",permalink:"/postgraphile/current/pg-pubsub-migration"}},s={},p=[{value:"Roles in PostGraphile",id:"roles-in-postgraphile",level:3}],u={toc:p},c="wrapper";function h(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"PostGraphile makes full use of PostgreSQL roles, so in this article we will\nexplain briefly how PostgreSQL roles and users work and how that relates to how\nwe use them in PostGraphile."),(0,o.kt)("p",null,"You can make any number of PostgreSQL roles with\n",(0,o.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/static/sql-createrole.html"},(0,o.kt)("inlineCode",{parentName:"a"},"CREATE ROLE")),"\ncommand and assign permissions to those roles with the\n",(0,o.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/static/sql-grant.html"},(0,o.kt)("inlineCode",{parentName:"a"},"GRANT")),"\ncommand. Permissions like select from the table ",(0,o.kt)("inlineCode",{parentName:"p"},"post")," or insert rows into the\n",(0,o.kt)("inlineCode",{parentName:"p"},"person")," table."),(0,o.kt)("p",null,"PostgreSQL roles are also hierarchical. That is you can \u201cgrant\u201d roles to other\nroles. For example if I had role ",(0,o.kt)("inlineCode",{parentName:"p"},"editor")," which could change the data in our\ndatabase and role ",(0,o.kt)("inlineCode",{parentName:"p"},"admin"),", if I granted the ",(0,o.kt)("inlineCode",{parentName:"p"},"editor")," role to ",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," with the\ncommand:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"grant editor to admin;\n")),(0,o.kt)("p",null,"Then the ",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," role would have the same permissions the ",(0,o.kt)("inlineCode",{parentName:"p"},"editor")," role has. The\n",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," role would also be able to ",(0,o.kt)("em",{parentName:"p"},"change")," its role to the ",(0,o.kt)("inlineCode",{parentName:"p"},"editor")," role. This\nmeans for the rest of the session you don\u2019t have any ",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," permissions, but\nonly permissions given to the ",(0,o.kt)("inlineCode",{parentName:"p"},"editor")," role."),(0,o.kt)("p",null,"In PostgreSQL you also have the idea of a user. A user is just a role that can\nlogin. So for example, the following are equivalent as the create an ",(0,o.kt)("inlineCode",{parentName:"p"},"admin"),"\nrole that can log in (or a user):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"create role admin login;\ncreate user admin;\n")),(0,o.kt)("p",null,"\u2026and the following are also equivalent as they create a role that ",(0,o.kt)("em",{parentName:"p"},"can\u2019t")," log\nin:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"create role editor;\ncreate user editor nologin;\n")),(0,o.kt)("p",null,"\u201cLogging in\u201d just means we can use the role when authenticating in the\nPostgreSQL authentication section of the connection string. So with the above\nroles you could start a PostgreSQL connection with\n",(0,o.kt)("inlineCode",{parentName:"p"},"postgres://admin@localhost/mydb"),", but not ",(0,o.kt)("inlineCode",{parentName:"p"},"postgres://editor@localhost/mydb"),"."),(0,o.kt)("h3",{id:"roles-in-postgraphile"},"Roles in PostGraphile"),(0,o.kt)("p",null,"So how does this apply to PostGraphile? PostGraphile requires you to have at\nleast one user (role that can log in) when connecting to the server. That role\nwill be specified in your connection string and will from here on out be\nreferred to as the ",(0,o.kt)("inlineCode",{parentName:"p"},"auth_user"),". You\u2019d connect with your ",(0,o.kt)("inlineCode",{parentName:"p"},"auth_user")," as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"postgraphile -c postgres://auth_user@localhost/mydb\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"auth_user")," will have all the priveleges PostGraphile might need."),(0,o.kt)("p",null,"You can also specify a ",(0,o.kt)("inlineCode",{parentName:"p"},"default_role")," with PostGraphile. The ",(0,o.kt)("inlineCode",{parentName:"p"},"default_role")," will\nbe used by PostGraphile whenever no authorization token is provided or when the\nrole claim in the authorization token is not specified. So all users that don\u2019t\nexplicitly specify a role will automatically use the ",(0,o.kt)("inlineCode",{parentName:"p"},"default_role"),"."),(0,o.kt)("p",null,"So the ",(0,o.kt)("inlineCode",{parentName:"p"},"default_role")," should have restricted privileges to only your data that\nis publicly accessible."),(0,o.kt)("p",null,"After that you could also specify more roles like a ",(0,o.kt)("inlineCode",{parentName:"p"},"user_role")," which should be\nincluded in the payload of your authorization tokens which may have more or less\npermissions then ",(0,o.kt)("inlineCode",{parentName:"p"},"default_role"),"."),(0,o.kt)("p",null,"In order to configure an default role just do the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"postgraphile -c postgres://auth_user@localhost/mydb --default-role default_role\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"This article was originally written by\n",(0,o.kt)("a",{parentName:"em",href:"https://twitter.com/calebmer"},"Caleb Meredith"),".")))}h.isMDXComponent=!0}}]);