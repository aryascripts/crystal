"use strict";(self.webpackChunk_localrepo_grafast_website=self.webpackChunk_localrepo_grafast_website||[]).push([[4297],{30876:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>m});var i=t(2784);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=i.createContext({}),d=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=d(e.components);return i.createElement(l.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=d(t),g=o,m=c["".concat(l,".").concat(g)]||c[g]||u[g]||a;return t?i.createElement(m,r(r({ref:n},s),{},{components:t})):i.createElement(m,r({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,r=new Array(a);r[0]=g;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[c]="string"==typeof e?e:o,r[1]=p;for(var d=2;d<a;d++)r[d]=t[d];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},44322:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>d});var i=t(7896),o=(t(2784),t(30876));const a={},r="pgCondition",p={unversionedId:"step-library/dataplan-pg/pgCondition",id:"step-library/dataplan-pg/pgCondition",title:"pgCondition",description:'This "modifier step" (not an ExecutableStep) is commonly acquired from',source:"@site/grafast/step-library/dataplan-pg/pgCondition.md",sourceDirName:"step-library/dataplan-pg",slug:"/step-library/dataplan-pg/pgCondition",permalink:"/grafast/step-library/dataplan-pg/pgCondition",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/grafast/website/grafast/step-library/dataplan-pg/pgCondition.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"pgClassExpression",permalink:"/grafast/step-library/dataplan-pg/pgClassExpression"},next:{title:"pgDeleteSingle",permalink:"/grafast/step-library/dataplan-pg/pgDeleteSingle"}},l={},d=[{value:"$pgCondition.orPlan()",id:"pgconditionorplan",level:2},{value:"$pgCondition.andPlan()",id:"pgconditionandplan",level:2},{value:"$pgCondition.notPlan()",id:"pgconditionnotplan",level:2},{value:"$pgCondition.existsPlan(options)",id:"pgconditionexistsplanoptions",level:2},{value:"$pgCondition.where(condition)",id:"pgconditionwherecondition",level:2},{value:"$pgCondition.having(condition)",id:"pgconditionhavingcondition",level:2},{value:"$pgCondition.placeholder($step, codec)",id:"pgconditionplaceholderstep-codec",level:2}],s={toc:d},c="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,i.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pgcondition"},"pgCondition"),(0,o.kt)("p",null,'This "modifier step" (',(0,o.kt)("strong",{parentName:"p"},"not")," an ExecutableStep) is commonly acquired from\n",(0,o.kt)("inlineCode",{parentName:"p"},"$pgSelect.wherePlan()"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"$pgSelect.havingPlan()"),", or similar methods. It's\nuseful for building up a condition (",(0,o.kt)("inlineCode",{parentName:"p"},"WHERE")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"HAVING")," clause) bit by bit."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"This is an advanced step, you probably will never use it unless you're building\nadvanced filtering capabilities into your GraphQL schema.")),(0,o.kt)("p",null,"pgConditions are created with a parent (a PgConditionCapableStep - typically another PgConditionStep, a PgSelectStep, or similar) and a mode:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"PASS_THRU")," - passes conditions directly up to the parent"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"AND")," - combines conditons with ",(0,o.kt)("inlineCode",{parentName:"li"},"AND")," and passes the result up to the parent"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"OR")," - combines the conditions with ",(0,o.kt)("inlineCode",{parentName:"li"},"OR")," and passes the result up to the parent"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"NOT")," - combines the conditons with ",(0,o.kt)("inlineCode",{parentName:"li"},"AND"),", groups them together and does a ",(0,o.kt)("inlineCode",{parentName:"li"},"NOT")," of the result, which is then passed up to the parent"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"EXISTS")," - builds an ",(0,o.kt)("inlineCode",{parentName:"li"},"EXISTS(...)")," expression utilising the conditions and passes it up to the parent")),(0,o.kt)("h2",{id:"pgconditionorplan"},"$pgCondition.orPlan()"),(0,o.kt)("p",null,"Returns a child pgCondition in ",(0,o.kt)("inlineCode",{parentName:"p"},"OR")," mode."),(0,o.kt)("h2",{id:"pgconditionandplan"},"$pgCondition.andPlan()"),(0,o.kt)("p",null,"Returns a child pgCondition in ",(0,o.kt)("inlineCode",{parentName:"p"},"AND")," mode."),(0,o.kt)("h2",{id:"pgconditionnotplan"},"$pgCondition.notPlan()"),(0,o.kt)("p",null,"Returns a child pgCondition in ",(0,o.kt)("inlineCode",{parentName:"p"},"NOT")," mode."),(0,o.kt)("h2",{id:"pgconditionexistsplanoptions"},"$pgCondition.existsPlan(options)"),(0,o.kt)("p",null,"Returns a child pgCondition in ",(0,o.kt)("inlineCode",{parentName:"p"},"EXISTS")," mode with the given options."),(0,o.kt)("h2",{id:"pgconditionwherecondition"},"$pgCondition.where(condition)"),(0,o.kt)("p",null,"Adds ",(0,o.kt)("inlineCode",{parentName:"p"},"condition"),' to the list of conditions. Cannot be used in "having" mode.'),(0,o.kt)("h2",{id:"pgconditionhavingcondition"},"$pgCondition.having(condition)"),(0,o.kt)("p",null,"Adds ",(0,o.kt)("inlineCode",{parentName:"p"},"condition"),' to the list of conditions. Cannot be used unless in "having" mode.'),(0,o.kt)("h2",{id:"pgconditionplaceholderstep-codec"},"$pgCondition.placeholder($step, codec)"),(0,o.kt)("p",null,"Equivalent to ",(0,o.kt)("inlineCode",{parentName:"p"},"$pgSelect.placeholder($step, codec)")))}u.isMDXComponent=!0}}]);