"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[2337],{30876:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>d});var r=t(2784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=u(t),m=a,d=c["".concat(p,".").concat(m)]||c[m]||g[m]||i;return t?r.createElement(d,l(l({ref:n},s),{},{components:t})):r.createElement(d,l({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85465:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=t(7896),a=(t(2784),t(30876));const i={layout:"page",path:"/postgraphile/extending/",title:"GraphQL Schema Plugins"},l=void 0,o={unversionedId:"extending",id:"extending",title:"GraphQL Schema Plugins",description:"PostGraphile's schema generator is built from a number of",source:"@site/postgraphile/extending.md",sourceDirName:".",slug:"/extending",permalink:"/postgraphile/next/extending",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/postgraphile/extending.md",tags:[],version:"current",frontMatter:{layout:"page",path:"/postgraphile/extending/",title:"GraphQL Schema Plugins"},sidebar:"docs",previous:{title:"Smart Comments",permalink:"/postgraphile/next/smart-comments"},next:{title:"Adding and replacing inflectors",permalink:"/postgraphile/next/make-add-inflectors-plugin"}},p={},u=[{value:"Writing Plugins",id:"writing-plugins",level:3},{value:"Loading Plugins",id:"loading-plugins",level:3}],s={toc:u},c="wrapper";function g(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"PostGraphile's schema generator is built from a number of\n",(0,a.kt)("a",{parentName:"p",href:"https://build.graphile.org/graphile-build/plugins/"},"graphile-build plugins"),". You can\nwrite your own plugins - either using the helpers available in ",(0,a.kt)("inlineCode",{parentName:"p"},"graphile-utils"),",\nor using the raw plugin interface available from Graphile Build."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"If you're looking for an easy way to remove/rename things, check out\n",(0,a.kt)("a",{parentName:"em",href:"./smart-tags/"},"smart tags"),".")),(0,a.kt)("h3",{id:"writing-plugins"},"Writing Plugins"),(0,a.kt)("p",null,"We've created a number of plugin helpers for common tasks:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"To add new fields and types,\n",(0,a.kt)("a",{parentName:"li",href:"./make-extend-schema-plugin/"},"check out ",(0,a.kt)("inlineCode",{parentName:"a"},"makeExtendSchemaPlugin"))),(0,a.kt)("li",{parentName:"ul"},"To change how fields and types are automatically named,\n",(0,a.kt)("a",{parentName:"li",href:"./inflection#overriding-inflection"},'check out "Overriding inflection"')),(0,a.kt)("li",{parentName:"ul"},"To change how fields are planned,\n",(0,a.kt)("a",{parentName:"li",href:"./make-wrap-plans-plugin/"},"check out ",(0,a.kt)("inlineCode",{parentName:"a"},"makeWrapPlansPlugin"))),(0,a.kt)("li",{parentName:"ul"},"To make certain fields nullable or non-nullable,\n",(0,a.kt)("a",{parentName:"li",href:"./make-change-nullability-plugin/"},"check out ",(0,a.kt)("inlineCode",{parentName:"a"},"makeChangeNullabilityPlugin"))),(0,a.kt)("li",{parentName:"ul"},"To process the generated schema,\n",(0,a.kt)("a",{parentName:"li",href:"./make-process-schema-plugin/"},"check out ",(0,a.kt)("inlineCode",{parentName:"a"},"makeProcessSchemaPlugin")))),(0,a.kt)("p",null,"For everything else, you can\n",(0,a.kt)("a",{parentName:"p",href:"./extending-raw/"},"write raw Graphile Build plugins"),"."),(0,a.kt)("p",null,"Do check out our ",(0,a.kt)("a",{parentName:"p",href:"./plugin-gallery/"},"plugin gallery")," for examples of plugins.\nThese are generally suitable for copying/pasting into your app and then\ncustomising to your needs."),(0,a.kt)("h3",{id:"loading-plugins"},"Loading Plugins"),(0,a.kt)("p",null,"Once you've written (or installed) a plugin, you can load it via your preset:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="graphile.config.mjs"',title:'"graphile.config.mjs"'},'import MyPlugin from "./myPlugin.mjs";\n\nexport default {\n  // ...\n  plugins: [MyPlugin],\n};\n')),(0,a.kt)("p",null,"Remember: multiple versions of ",(0,a.kt)("inlineCode",{parentName:"p"},"graphql")," in your ",(0,a.kt)("inlineCode",{parentName:"p"},"node_modules")," will cause\nproblems; so we ",(0,a.kt)("strong",{parentName:"p"},"strongly")," recommend using the ",(0,a.kt)("inlineCode",{parentName:"p"},"graphql")," object that's\navailable on the ",(0,a.kt)("inlineCode",{parentName:"p"},"Build")," object (second argument to hooks) rather than requiring\nyour own version."))}g.isMDXComponent=!0}}]);