"use strict";(self.webpackChunk_localrepo_star_website=self.webpackChunk_localrepo_star_website||[]).push([[2784],{876:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4352:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7896),o=(n(2784),n(876));const i={sidebar_position:1},a="pg-introspection",s={unversionedId:"index",id:"index",title:"pg-introspection",description:"A strongly-typed PostgreSQL introspection library for PostgreSQL built",source:"@site/pg-introspection/index.md",sourceDirName:".",slug:"/",permalink:"/pg-introspection/",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/utils/website/pg-introspection/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Accessors",permalink:"/pg-introspection/accessors"}},p={},c=[{value:"Usage",id:"usage",level:2}],l={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pg-introspection"},"pg-introspection"),(0,o.kt)("p",null,"A strongly-typed PostgreSQL introspection library for PostgreSQL built\nautomatically from the\n",(0,o.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/catalogs.html"},"PostgreSQL system catalog documentation"),",\nwith the TypeScript documentation for each attribute/type also pulled from the\nPostgreSQL documentation for easy reference directly in your editor."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Issue the ",(0,o.kt)("inlineCode",{parentName:"p"},"makeIntrospectionQuery()")," SQL query to your database, then feed the\nfirst row's ",(0,o.kt)("inlineCode",{parentName:"p"},"introspection")," field into ",(0,o.kt)("inlineCode",{parentName:"p"},"parseIntrospectionResults()")," to get your\nstrongly typed introspection results."),(0,o.kt)("p",null,"Example usage with ",(0,o.kt)("inlineCode",{parentName:"p"},"pg")," module:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import {\n  makeIntrospectionQuery,\n  parseIntrospectionResults,\n} from "pg-introspection";\nimport { Pool } from "pg";\n\nconst pool = new Pool({\n  connectionString: "postgres://localhost:5432/my_database",\n});\n\nasync function main() {\n  const sql = makeIntrospectionQuery();\n  const { rows } = await pool.query(sql);\n  const introspection = parseIntrospectionResults(row[0].introspection);\n\n  console.log(\n    `The ${introspection.database.datname} DBA is ${\n      introspection.database.getDba()?.rolname ?? "-"\n    }`,\n  );\n}\n\nmain();\n')))}m.isMDXComponent=!0}}]);