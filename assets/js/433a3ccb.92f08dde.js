"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[1208],{30876:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>h});var r=t(2784);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=r.createContext({}),p=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(u.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=p(t),m=l,h=c["".concat(u,".").concat(m)]||c[m]||g[m]||i;return t?r.createElement(h,a(a({ref:n},s),{},{components:t})):r.createElement(h,a({ref:n},s))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,a=new Array(i);a[0]=m;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[c]="string"==typeof e?e:l,a[1]=o;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},10130:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=t(7896),l=(t(2784),t(30876));const i={layout:"page",path:"/postgraphile/make-change-nullability-plugin/",title:"makeChangeNullabilityPlugin (graphile-utils)"},a=void 0,o={unversionedId:"make-change-nullability-plugin",id:"version-4.x/make-change-nullability-plugin",title:"makeChangeNullabilityPlugin (graphile-utils)",description:"NOTE: this documentation applies to PostGraphile v4.1.0+",source:"@site/versioned_docs/version-4.x/make-change-nullability-plugin.md",sourceDirName:".",slug:"/make-change-nullability-plugin",permalink:"/postgraphile/current/make-change-nullability-plugin",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/versioned_docs/version-4.x/make-change-nullability-plugin.md",tags:[],version:"4.x",frontMatter:{layout:"page",path:"/postgraphile/make-change-nullability-plugin/",title:"makeChangeNullabilityPlugin (graphile-utils)"},sidebar:"docs",previous:{title:"makeAddInflectorsPlugin (graphile-utils)",permalink:"/postgraphile/current/make-add-inflectors-plugin"},next:{title:"makeExtendSchemaPlugin (graphile-utils)",permalink:"/postgraphile/current/make-extend-schema-plugin"}},u={},p=[{value:"Example",id:"example",level:3}],s={toc:p},c="wrapper";function g(e){let{components:n,...t}=e;return(0,l.kt)(c,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"NOTE: this documentation applies to PostGraphile v4.1.0+")),(0,l.kt)("p",null,"Use this plugin to easily change the nullability of fields in your GraphQL,\nwhere true = nullable (e.g. ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),"), false = non-nullable (e.g. ",(0,l.kt)("inlineCode",{parentName:"p"},"String!"),")."),(0,l.kt)("p",null,"For more information about nullability in PostGraphile in general, see the FAQ\nquestion ",(0,l.kt)("a",{parentName:"p",href:"./why-nullable/"},'"Why is it nullable?"')),(0,l.kt)("h3",{id:"example"},"Example"),(0,l.kt)("p",null,"You can combine this plugin with the use of ",(0,l.kt)("inlineCode",{parentName:"p"},"makeWrapResolversPlugin")," so that\nonly the current user can see their own email address:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'const {\n  makeChangeNullabilityPlugin,\n  makeWrapResolversPlugin,\n  makePluginByCombiningPlugins,\n} = require("graphile-utils");\n\nmodule.exports = makePluginByCombiningPlugins(\n  // 1: make User.email nullable:\n  makeChangeNullabilityPlugin({\n    User: {\n      email: true,\n    },\n  }),\n\n  // 2: return null unless the user id matches the current logged in user_id\n  makeWrapResolversPlugin({\n    User: {\n      email: {\n        requires: {\n          siblingColumns: [{ column: "id", alias: "$user_id" }],\n        },\n        resolve(resolver, user, args, context, _resolveInfo) {\n          if (context.jwtClaims.user_id !== user.$user_id) return null;\n          return resolver();\n        },\n      },\n    },\n  }),\n);\n')))}g.isMDXComponent=!0}}]);