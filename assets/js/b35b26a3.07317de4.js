"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[9594],{30876:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,g=c["".concat(i,".").concat(d)]||c[d]||h[d]||o;return n?a.createElement(g,s(s({ref:t},u),{},{components:n})):a.createElement(g,s({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:r,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},82644:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7896),r=(n(2784),n(30876));const o={layout:"page",path:"/postgraphile/quick-start-guide/",title:"Quick Start Guide"},s=void 0,l={unversionedId:"quick-start-guide",id:"version-4.x/quick-start-guide",title:"Quick Start Guide",description:"This quick start guide will walk you through spinning up your first PostGraphile",source:"@site/versioned_docs/version-4.x/quick-start-guide.md",sourceDirName:".",slug:"/quick-start-guide",permalink:"/postgraphile/current/quick-start-guide",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/versioned_docs/version-4.x/quick-start-guide.md",tags:[],version:"4.x",frontMatter:{layout:"page",path:"/postgraphile/quick-start-guide/",title:"Quick Start Guide"},sidebar:"docs",previous:{title:"Required Knowledge",permalink:"/postgraphile/current/required-knowledge"},next:{title:'Namespaces (PostgreSQL "schemas")',permalink:"/postgraphile/current/namespaces"}},i={},p=[{value:"Table of Contents",id:"table-of-contents",level:3},{value:"Install Node",id:"install-node",level:3},{value:"Install PostgreSQL",id:"install-postgresql",level:3},{value:"Create a Database",id:"create-a-database",level:3},{value:"Install PostGraphile",id:"install-postgraphile",level:3}],u={toc:p},c="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This quick start guide will walk you through spinning up your first PostGraphile\nserver, including installing the prerequisites such as Node and PostgreSQL."),(0,r.kt)("h3",{id:"table-of-contents"},"Table of Contents"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#install-node"},"Install Node")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#install-postgresql"},"Install PostgreSQL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#create-a-database"},"Create a Database")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#install-postgraphile"},"Install PostGraphile"))),(0,r.kt)("h3",{id:"install-node"},"Install Node"),(0,r.kt)("p",null,"You need to be running Node.js v8.6 or higher to run PostGraphile. You can check\nyour current version of Node by running ",(0,r.kt)("inlineCode",{parentName:"p"},"node --version"),". If you're running a\nrecent version you can skip this section."),(0,r.kt)("p",null,"There's many ways of installing node; if you're on macOS you might prefer\ninstalling with ",(0,r.kt)("a",{parentName:"p",href:"https://brew.sh/"},"homebrew")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"brew install node"),"; if you're\non a unix-based system you might like to\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/creationix/nvm"},"use the ",(0,r.kt)("inlineCode",{parentName:"a"},"nvm")," tool"),". Failing these, if\nyou're using OS X or Windows, use one of the installers from the\n",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"Node.js download page"),". Make sure you select\nthe version labelled LTS. Linux users can scroll down the page and find the\nversion that works with their system."),(0,r.kt)("p",null,"Once installed run ",(0,r.kt)("inlineCode",{parentName:"p"},"node -v")," in a terminal to check your version. It must be\n8.6.0 or higher."),(0,r.kt)("h3",{id:"install-postgresql"},"Install PostgreSQL"),(0,r.kt)("p",null,"We need a PostgreSQL database to connect to. You can skip this section if you\nalready have PostgreSQL version ",(0,r.kt)("inlineCode",{parentName:"p"},"9.6.0")," or higher installed."),(0,r.kt)("p",null,"PostgreSQL does not need to be installed on the same machine, but you'll have a\nbetter development experience if it is. Try and minimise database connection\nlatency! If you do not use a local PostgreSQL server then you'll need to modify\nthe commands that follow to account for this."),(0,r.kt)("p",null,"If you are running on macOS, it is recommended that you install and use\n",(0,r.kt)("a",{parentName:"p",href:"http://postgresapp.com/"},"PostgreSQL.app"),". If you are on another platform, go to\nthe ",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/download/"},"PostgreSQL download page")," to pick up\na copy of PostgreSQL. We recommend using a version of PostgreSQL higher than\n",(0,r.kt)("inlineCode",{parentName:"p"},"9.6.0"),". You can read more about the reasoning behind this requirement\n",(0,r.kt)("a",{parentName:"p",href:"./requirements/"},"in our documentation"),"."),(0,r.kt)("p",null,"After that, make sure your copy of PostgreSQL is running locally by running\n",(0,r.kt)("inlineCode",{parentName:"p"},"psql postgres:///")," in a terminal (the three slashes is deliberate - we're\ndeliberately not specifying a host so it uses the defaults of hostname:\nlocalhost, port: 5432)."),(0,r.kt)("p",null,"If you get something like this returned then PostgreSQL is successfully\ninstalled:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ psql "postgres:///"\n\npsql: FATAL:  database "username" does not exist\n')),(0,r.kt)("p",null,'however, if you receive a "Connection refused" error then that indicates your\nPostgreSQL server is not running, or not reachable:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ psql "postgres:///"\n\npsql: could not connect to server: Connection refused\n')),(0,r.kt)("p",null,"If you want to connect to a different database within PostgreSQL, just add the\ndatabase name to the end of the connection string:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ psql postgres:///testdb # Connects to the `testdb` database on your local machine\n$ psql "postgres://user:password@somehost:2345/somedb"  # Connects to the `somedb` database at `postgres://somehost:2345` using login with `user` and `password`\n')),(0,r.kt)("p",null,"Read the documentation on\n",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING"},"PostgreSQL connection strings"),"\nto learn more about alternative formats (including using a password)."),(0,r.kt)("h3",{id:"create-a-database"},"Create a Database"),(0,r.kt)("p",null,"Next, create a database. You can do this by using the terminal:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ createdb mydb\n")),(0,r.kt)("p",null,'This will create a PostgreSQL database called "mydb". You can read more about\nthis on the\n',(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/static/tutorial-createdb.html"},"PostgreSQL Documentation site"),".\nNow you can run ",(0,r.kt)("inlineCode",{parentName:"p"},"psql")," with your database URL and get a SQL prompt:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ psql "postgres:///mydb"\n\npsql (9.6.*)\nType "help" for help.\n\n=#\n')),(0,r.kt)("p",null,"Run the following query to make sure things are working smoothly:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"=# select 1 + 1 as two;\n two\n-----\n   2\n(1 row)\n\n=#\n")),(0,r.kt)("h3",{id:"install-postgraphile"},"Install PostGraphile"),(0,r.kt)("p",null,"It is easy to install PostGraphile with\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.npmjs.com/getting-started/installing-node"},"npm"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ npm install -g postgraphile\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"NOTE"),": ",(0,r.kt)("em",{parentName:"p"},"we do not recommend installing PostGraphile globally (with the ",(0,r.kt)("inlineCode",{parentName:"em"},"-g"),"\nflag to ",(0,r.kt)("inlineCode",{parentName:"em"},"npm")," used here) - local installs are preferred. However, if you're\njust getting started with Node.js then using the global install method is much\nsimpler. Once you start wanting to use plugins with PostGraphile we recommend\nyou move to using a local install."))),(0,r.kt)("p",null,"To run PostGraphile, you\u2019ll use the same URL that you used for ",(0,r.kt)("inlineCode",{parentName:"p"},"psql")," with the\ndatabase name added:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# Connect to the `mydb` database within the local PostgreSQL server\n$ postgraphile -c "postgres:///mydb"\n\n# Connect to a database that requires SSL/TLS\n$ postgraphile -c "postgres://securehost:5432/db?ssl=true"\n\n# Connect to the `somedb` database within the PostgreSQL at somehost port 2345\n$ postgraphile -c "postgres://somehost:2345/somedb"\n')),(0,r.kt)("p",null,"You can also run PostGraphile with the watch flag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ postgraphile -c "postgres:///mydb" --watch\n')),(0,r.kt)("p",null,"With the ",(0,r.kt)("inlineCode",{parentName:"p"},"--watch")," flag, PostGraphile will automatically update your GraphQL API\nwhenever the PostgreSQL schemas you are introspecting change."),(0,r.kt)("p",null,"Running PostGraphile will give you two endpoints:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"  \u2023 GraphQL endpoint served at http://localhost:5000/graphql\n  \u2023 GraphiQL endpoint served at http://localhost:5000/graphiql\n")),(0,r.kt)("p",null,"The first endpoint is for your application to talk to; the second endpoint can\nbe opened in a web browser to give you access to your database through\n",(0,r.kt)("inlineCode",{parentName:"p"},"GraphiQL")," - ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/graphql/graphiql"},"a visual GraphQL explorer"),"."),(0,r.kt)("p",null,"Well done \u2014 you've got PostGraphile up and running!"))}h.isMDXComponent=!0}}]);