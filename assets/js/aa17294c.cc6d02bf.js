"use strict";(self.webpackChunk_localrepo_grafast_website=self.webpackChunk_localrepo_grafast_website||[]).push([[9530],{30876:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var a=r(2784);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(r),m=n,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||s;return r?a.createElement(f,o(o({ref:t},c),{},{components:r})):a.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:n,o[1]=i;for(var p=2;p<s;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},53817:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var a=r(7896),n=(r(2784),r(30876));const s={},o="Step library",i={unversionedId:"step-library/index",id:"step-library/index",title:"Step library",description:"A step class is a JavaScript class that extends ExecutableStep with an",source:"@site/grafast/step-library/index.md",sourceDirName:"step-library",slug:"/step-library/",permalink:"/grafast/step-library/",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/grafast/website/grafast/step-library/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Plan resolvers",permalink:"/grafast/plan-resolvers"},next:{title:"Standard steps",permalink:"/grafast/step-library/standard-steps/"}},l={},p=[],c={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"step-library"},"Step library"),(0,n.kt)("p",null,"A step class is a JavaScript class that extends ",(0,n.kt)("inlineCode",{parentName:"p"},"ExecutableStep")," with an\n",(0,n.kt)("inlineCode",{parentName:"p"},"execute")," method. It may, optionally, implement other ",(0,n.kt)("grafast",null)," lifecycle\nmethods, and add other accessors and similar that child field plans may call.\nFor more information see ",(0,n.kt)("a",{parentName:"p",href:"../step-classes"},"step classes"),"."),(0,n.kt)("p",null,"A number of builtin standard step classes are provided for schemas to\naccomplish common tasks, these are documented in ",(0,n.kt)("a",{parentName:"p",href:"./standard-steps"},"Standard\nsteps"),". Often these builtin steps are enough for your schemas\nneeds, especially when integrating with an existing business logic layer via\nsteps such as ",(0,n.kt)("a",{parentName:"p",href:"./standard-steps/loadOne"},"loadOne")," and ",(0,n.kt)("a",{parentName:"p",href:"./standard-steps/loadMany"},"loadMany"),"."),(0,n.kt)("p",null,"Should these standard steps prove insufficient, schema designers are encouraged\nto write their own step classes and/or use step classes made available in other\npackages. Unless you want to use the advanced lifecycle hooks, writing a step\nclass is generally not much more complicated than writing a DataLoader callback\n(and sometimes more straightforward, depending on what you're trying to do).\nSee ",(0,n.kt)("a",{parentName:"p",href:"../step-classes"},"step classes")," for information on writing your own step\nclasses."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"@dataplan/*")," modules contain step classes for particular specialised use\ncases. These are not part of ",(0,n.kt)("grafast",null)," itself, but serve as a welcome\ncompanion to it. The list of supported optimized sources is expected to grow\nover time - if you'd like to collaborate on building step classes for a\nparticular use case please get in touch. You may also find that members of the\ncommunity write and share their own step classes on GitHub, npm and similar."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Step classes whose names start with two underscores (",(0,n.kt)("inlineCode",{parentName:"p"},"__"),") are internals and\nmust not be used.")))}u.isMDXComponent=!0}}]);