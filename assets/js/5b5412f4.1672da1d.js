"use strict";(self.webpackChunk_localrepo_star_website=self.webpackChunk_localrepo_star_website||[]).push([[8263],{876:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>f});var n=r(2784);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),s=c(r),b=a,f=s["".concat(l,".").concat(b)]||s[b]||u[b]||o;return r?n.createElement(f,i(i({ref:t},m),{},{components:r})):n.createElement(f,i({ref:t},m))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=b;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[s]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},9483:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=r(7896),a=(r(2784),r(876));const o={sidebar_position:10,title:"te.tmp()"},i="te.te.tmp(obj, callback)",p={unversionedId:"api/te-tmp",id:"api/te-tmp",title:"te.tmp()",description:"(ADVANCED)",source:"@site/tamedevil/api/te-tmp.md",sourceDirName:"api",slug:"/api/te-tmp",permalink:"/tamedevil/api/te-tmp",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/utils/website/tamedevil/api/te-tmp.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"te.tmp()"},sidebar:"tutorialSidebar",previous:{title:"te.tempVar()",permalink:"/tamedevil/api/te-temp-var"},next:{title:"te.run()",permalink:"/tamedevil/api/te-run"}},l={},c=[],m={toc:c},s="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(s,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tetetmpobj-callback"},(0,a.kt)("inlineCode",{parentName:"h1"},"te.te.tmp(obj, callback)")),(0,a.kt)("p",null,"(",(0,a.kt)("strong",{parentName:"p"},"ADVANCED"),")"),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"obj")," is potentially expensive code and you need to reference it multiple\ntimes (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"te`(${obj}.foo === 3 ? ${obj}.bar : ${obj}.baz)`"),") then you can\nuse ",(0,a.kt)("inlineCode",{parentName:"p"},"tmp")," to create a temporary variable that stores reference to it and return\nthe result of calling ",(0,a.kt)("inlineCode",{parentName:"p"},"callback")," passing this temporary reference. E.g.\n",(0,a.kt)("inlineCode",{parentName:"p"},"te.tmp(obj, tmp => te`(${tmp}.foo === 3 ? ${tmp}.bar : ${tmp}.baz)`)")," means\nthat the potentially expensive expression in the original ",(0,a.kt)("inlineCode",{parentName:"p"},"obj")," variable only\nneed to be evaluated once, not 3 times."))}u.isMDXComponent=!0}}]);