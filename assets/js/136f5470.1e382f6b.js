"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[8475],{30876:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(2784);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),d=a,g=u["".concat(l,".").concat(d)]||u[d]||h[d]||i;return t?r.createElement(g,o(o({ref:n},c),{},{components:t})):r.createElement(g,o({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2010:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(7896),a=(t(2784),t(30876));const i={layout:"page",path:"/postgraphile/versioning-policy/",title:"Versioning Policy"},o=void 0,s={unversionedId:"versioning-policy",id:"version-4.x/versioning-policy",title:"Versioning Policy",description:"TL;DR: breaking changes to the GraphQL schema require a major version update.",source:"@site/versioned_docs/version-4.x/versioning-policy.md",sourceDirName:".",slug:"/versioning-policy",permalink:"/postgraphile/current/versioning-policy",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/versioned_docs/version-4.x/versioning-policy.md",tags:[],version:"4.x",frontMatter:{layout:"page",path:"/postgraphile/versioning-policy/",title:"Versioning Policy"},sidebar:"docs",previous:{title:"Why is it nullable?",permalink:"/postgraphile/current/why-nullable"}},l={},p=[{value:"What about breaking changes in GraphQL itself (and other dependencies)?",id:"what-about-breaking-changes-in-graphql-itself-and-other-dependencies",level:3}],c={toc:p},u="wrapper";function h(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"TL;DR: breaking changes to the GraphQL schema require a major version update.\nBreaking changes to the plugin interface would typically require a major version\nupdate, but in rare cases may be included in a minor version update."),(0,a.kt)("p",null,"PostGraphile (without third party plugins) follows semver: ",(0,a.kt)("inlineCode",{parentName:"p"},"major.minor.patch"),".\nSmall fixes go into a patch, nice new features go into a minor release, and\nbreaking changes would require a major release."),(0,a.kt)("p",null,"PostGraphile wants to help you make maintainable GraphQL APIs, as such any\nchange that will break your existing GraphQL schema (e.g. by making something\nnullable that wasn't previously, or removing a field) would be a breaking change\nand require a major version update (e.g. 4.0.0 -> 5.0.0). To work around this,\nwe will often add command-line flags (or library options) to opt into new\nfunctionality before it is enabled by default. An example of this is\n",(0,a.kt)("inlineCode",{parentName:"p"},"--no-ignore-rbac"),", which you should probably be using!"),(0,a.kt)("p",null,'The new plugin interface introduced in PostGraphile v4.0.0 is not as mature as\nthe generated GraphQL schema. Due to this, plugins are seen as more\n"experimental" and breaking changes to the plugin interfaces may in certain\nexceptional situations be included in a minor version update (e.g. 4.0.0 ->\n4.1.0). This will change in a later major release of PostGraphile, once the\nplugin interface is more stable. Despite this, breaking changes to the plugin\ninterface are seen as a major issue and will be avoided as much as possible.\nInterfaces that are documented on the Graphile website will not be broken\nwithout a ',(0,a.kt)("strong",{parentName:"p"},"very good reason"),"."),(0,a.kt)("h3",{id:"what-about-breaking-changes-in-graphql-itself-and-other-dependencies"},"What about breaking changes in GraphQL itself (and other dependencies)?"),(0,a.kt)("p",null,"TL;DR: use a lockfile."),(0,a.kt)("p",null,"PostGraphile will add support for wider versions of GraphQL (and other\ndependencies) over time without requiring a major or minor update. PostGraphile\ndoes not treat these as breaking changes as it's assumed that you follow Node.js\nbest practices and use a package lockfile, such as ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn.lock")," (yarn) or\n",(0,a.kt)("inlineCode",{parentName:"p"},"package-lock.json")," (npm). You can use features such as\n",(0,a.kt)("a",{parentName:"p",href:"https://yarnpkg.com/lang/en/docs/selective-version-resolutions/"},'yarn\'s "resolutions"'),"\nto pin a particular dependency (such as ",(0,a.kt)("inlineCode",{parentName:"p"},"graphql"),") to a particular version (such\nas ",(0,a.kt)("inlineCode",{parentName:"p"},"0.13.x"),")."))}h.isMDXComponent=!0}}]);