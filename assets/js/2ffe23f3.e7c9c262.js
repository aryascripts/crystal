"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[7906],{30876:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,d=u["".concat(l,".").concat(m)]||u[m]||f[m]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},46046:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=n(7896),o=(n(2784),n(30876));const i={layout:"page",path:"/postgraphile/function-restrictions/",title:"Database Function Restrictions"},a=void 0,c={unversionedId:"function-restrictions",id:"function-restrictions",title:"Database Function Restrictions",description:"PostGraphile supports a wide range of PostgreSQL functions; however we do not",source:"@site/postgraphile/function-restrictions.md",sourceDirName:".",slug:"/function-restrictions",permalink:"/postgraphile/next/function-restrictions",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/postgraphile/function-restrictions.md",tags:[],version:"current",frontMatter:{layout:"page",path:"/postgraphile/function-restrictions/",title:"Database Function Restrictions"},sidebar:"docs",previous:{title:"Custom Mutations",permalink:"/postgraphile/next/custom-mutations"},next:{title:"Database Function Gallery",permalink:"/postgraphile/next/function-gallery"}},l={},s=[],p={toc:s},u="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"PostGraphile supports a wide range of PostgreSQL functions; however we do not\nsupport:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"VARIADIC functions"),(0,o.kt)("li",{parentName:"ul"},"overloaded functions (because it's not currently possible to expose them\nneatly over GraphQL)"),(0,o.kt)("li",{parentName:"ul"},"functions that return ",(0,o.kt)("inlineCode",{parentName:"li"},"record")," without any more type information (because we\ndon't know what columns that ",(0,o.kt)("inlineCode",{parentName:"li"},"record")," will contain, and thus cannot convert it\nto GraphQL)",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"to solve this, change ",(0,o.kt)("inlineCode",{parentName:"li"},"record")," to be the name of a composite type that\nyou've defined with ",(0,o.kt)("inlineCode",{parentName:"li"},"CREATE TYPE")," (or similar)")))))}f.isMDXComponent=!0}}]);