"use strict";(self.webpackChunk_localrepo_star_website=self.webpackChunk_localrepo_star_website||[]).push([[5173],{876:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(2784);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(r),f=o,g=c["".concat(p,".").concat(f)]||c[f]||d[f]||i;return r?n.createElement(g,a(a({ref:t},u),{},{components:r})):n.createElement(g,a({ref:t},u))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1085:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(7896),o=(r(2784),r(876));const i={sidebar_position:1},a="Graphile Config",l={unversionedId:"index",id:"index",title:"Graphile Config",description:"PRERELEASE: this is pre-release software; use at your own risk. This will",source:"@site/graphile-config/index.md",sourceDirName:".",slug:"/",permalink:"/graphile-config/",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/utils/website/graphile-config/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Plugin",permalink:"/graphile-config/plugin"}},p={},s=[{value:"Supporting TypeScript ESM",id:"supporting-typescript-esm",level:2}],u={toc:s},c="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"graphile-config"},"Graphile Config"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"PRERELEASE"),": this is pre-release software; use at your own risk. This will\nlikely change a lot before it's ultimately released."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"graphile-config")," provides a standard plugin interface and helpers that can be\nused across the entire of the Graphile suite. Primarily users will only use this\nas ",(0,o.kt)("inlineCode",{parentName:"p"},"import type Plugin from 'graphile-config';")," so that they can export plugins."),(0,o.kt)("p",null,"This package provides two interfaces: ",(0,o.kt)("inlineCode",{parentName:"p"},"Plugin")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Preset")),(0,o.kt)("h2",{id:"supporting-typescript-esm"},"Supporting TypeScript ESM"),(0,o.kt)("p",null,"You can specify a ",(0,o.kt)("inlineCode",{parentName:"p"},"graphile.config.ts")," file; but if that uses ",(0,o.kt)("inlineCode",{parentName:"p"},"export default"),"\nand your TypeScript is configured to export ESM then you'll get an error telling\nyou that you cannot ",(0,o.kt)("inlineCode",{parentName:"p"},"require")," an ES Module:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /path/to/graphile.config.ts\nrequire() of ES modules is not supported.\nrequire() of /path/to/graphile.config.ts from /path/to/node_modules/graphile-config/dist/loadConfig.js is an ES module file as it is a .ts file whose nearest parent package.json contains "type": "module" which defines all .ts files in that package scope as ES modules.\nInstead change the requiring code to use import(), or remove "type": "module" from /path/to/package.json.\n')),(0,o.kt)("p",null,"Or, in newer versions, an error saying unknown file extension:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'TypeError [ERR_UNKNOWN_FILE_EXTENSION]: Unknown file extension ".ts" for /path/to/graphile.config.ts\n')),(0,o.kt)("p",null,"To solve this, use the experimental loaders API to add support for TS ESM via\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"ts-node/esm")," loader:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'export NODE_OPTIONS="$NODE_OPTIONS --loader ts-node/esm"\n')),(0,o.kt)("p",null,"Then run your command again."))}d.isMDXComponent=!0}}]);