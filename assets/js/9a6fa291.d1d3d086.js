"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[6434],{30876:(e,t,i)=>{i.d(t,{Zo:()=>u,kt:()=>c});var n=i(2784);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(i),g=a,c=m["".concat(p,".").concat(g)]||m[g]||h[g]||r;return i?n.createElement(c,l(l({ref:t},u),{},{components:i})):n.createElement(c,l({ref:t},u))}));function c(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,l=new Array(r);l[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<r;s++)l[s]=i[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,i)}g.displayName="MDXCreateElement"},792:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=i(7896),a=(i(2784),i(30876));const r={layout:"page",path:"/postgraphile/community-plugins/",title:"PostGraphile community plugins"},l=void 0,o={unversionedId:"community-plugins",id:"version-4.x/community-plugins",title:"PostGraphile community plugins",description:"Community members can write plugins for PostGraphile that extends its",source:"@site/versioned_docs/version-4.x/community-plugins.md",sourceDirName:".",slug:"/community-plugins",permalink:"/postgraphile/current/community-plugins",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/versioned_docs/version-4.x/community-plugins.md",tags:[],version:"4.x",frontMatter:{layout:"page",path:"/postgraphile/community-plugins/",title:"PostGraphile community plugins"},sidebar:"docs",previous:{title:"PostGraphile Plugin Gallery",permalink:"/postgraphile/current/plugin-gallery"},next:{title:"Server Plugins",permalink:"/postgraphile/current/plugins"}},p={},s=[],u={toc:s},m="wrapper";function h(e){let{components:t,...i}=e;return(0,a.kt)(m,(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Community members can write plugins for PostGraphile that extends its\nfunctionality; this page lists some of them. Issues with these plugins should be\ndirected to the plugin authors, not to this project. This page is maintained by\nthe community and is not an endorsement by the project."),(0,a.kt)("p",null,"If you have written a PostGraphile plugin (or have found one that is not listed\nhere), then please feel free to add it, you can\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/graphile/graphile.github.io/edit/develop/src/pages/postgraphile/community-plugins.md"},"edit this page in GitHub"),"."),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"./usage-cli/"},"CLI")," or ",(0,a.kt)("a",{parentName:"p",href:"./usage-library/"},"library")," docs for how to load\nplugins."),(0,a.kt)("p",null,"Schema extension plugins for PostGraphile:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphile-contrib/postgraphile-plugin-connection-filter"},"postgraphile-plugin-connection-filter")," -\nadds a ",(0,a.kt)("inlineCode",{parentName:"li"},"filter:")," arg to connections that offers a more powerful alternative to\nthe built in filtering operations"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/hansololai/postgraphile-connection-filter-polymorphic"},"postgraphile-plugin-connection-filter-polymorphic")," -\nadds association filter on top of connection filter for polymorphic\nassociations."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/postgraphile-polymorphic-relation-plugin"},"postgraphile-polymorphic-relation_plugin")," -\ncreate associations (forward and backward) between models via polymorphic\nassociations. (same concept as\npostgraphile-plugin-connection-filter-polymorphic)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/hansololai/postgraphile-index-to-unique-constraint-plugin"},"postgraphile-index-to-unique-constraint-plugin")," -\nextends PostGraphile's unique constraint detection to unique indexes also."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/hansololai/postgraphile-table-extension-plugin"},"postgraphile-table-extension-plugin")," -\nextend a table's fields (non-association) to another table via unique foreign\nkey constraint. Useful for vertical partitioned tables."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/RoadRunnerEngineering/postgraphile-plugin-custom-filter"},"postgraphile-plugin-custom-filter")," -\nadds a ",(0,a.kt)("inlineCode",{parentName:"li"},"customFilter:")," arg to connections that offers user defined filters on\nany conditions, as long as they can be fit into a ",(0,a.kt)("inlineCode",{parentName:"li"},"where")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/EmperorRXF/postgraphile-plugin-atomic-mutations"},"postgraphile-plugin-atomic-mutations")," -\nenables mutation atomicity with GraphQL requests containing multiple mutations"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mlipscombe/postgraphile-plugin-nested-mutations"},"postgraphile-plugin-nested-mutations")," -\nenables a single mutation to create/update many related records"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/einarjegorov/graphile-upsert-plugin/blob/master/index.js"},"graphile-upsert-plugin")," -\nadds upsert mutations"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/jashmenn/postgraphile-upsert-plugin"},"@fullstackio/postgraphile-upsert-plugin")," -\nanother upsert mutations plugin - adds upsert ",(0,a.kt)("inlineCode",{parentName:"li"},"where")," conditions"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphile-contrib/pg-simplify-inflector"},"@graphile-contrib/pg-simplify-inflector")," -\nsimplifies field names by automatically removing ",(0,a.kt)("inlineCode",{parentName:"li"},"ByFooIdAndBarId"),"-style\nsuffixes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphile-contrib/pg-omit-archived"},"@graphile-contrib/pg-omit-archived")," -\nallows soft-deletes and automatic hiding of records with a particular flag"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphile-contrib/pg-many-to-many"},"@graphile-contrib/pg-many-to-many")," -\nadds connection fields for many-to-many relations."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphile-contrib/pg-order-by-related"},"@graphile-contrib/pg-order-by-related")," -\nenables ordering by related table columns."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphile-contrib/pg-order-by-multi-column-index"},"@graphile-contrib/pg-order-by-multi-column-index")," -\nenables ordering by multi-column indexes when using ",(0,a.kt)("inlineCode",{parentName:"li"},"ignoreIndexes: false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mattbretl/postgraphile-plugin-derived-field"},"postgraphile-plugin-derived-field")," -\nprovides an interface for adding derived fields"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mattbretl/postgraphile-plugin-upload-field"},"postgraphile-plugin-upload-field")," -\nenables file uploads (see ",(0,a.kt)("inlineCode",{parentName:"li"},"postgraphile-upload-example")," below)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/deden/postgraphile-plugin-connection-multi-tenant"},"postgraphile-plugin-connection-multi-tenant"),' -\n"Filtering Connections in PostGraphile by Tenants"'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/singingwolfboy/graphile-build-postgis"},"graphile-build-postgis")," -\nPostGIS support (WIP)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/stlbucket/philede/blob/master/api/src/graphile-extensions/pm2Status.js"},"postgraphile-pm2-status")," -\nexpose pm2 process status thru a query"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/graphile/examples/blob/master/shared/plugins/PassportLoginPlugin.js"},"PassportLoginPlugin")," -\nexample plugin to add a username/password ",(0,a.kt)("inlineCode",{parentName:"li"},"login")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"register")," mutations\nusing Passport.js"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mlipscombe/postgraphile-plugin-fulltext-filter"},"postgraphile-plugin-fulltext-filter")," -\nadds support for ",(0,a.kt)("inlineCode",{parentName:"li"},"tsvector")," full text search fields to\npostgraphile-plugin-connection-filter"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mlipscombe/postgraphile-plugin-zombodb"},"postgraphile-plugin-zombodb")," -\nadds advanced search capabilities using\n",(0,a.kt)("a",{parentName:"li",href:"https://github.com/zombodb/zombodb"},"ZomboDB")," and ElasticSearch"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/tjmoses/postgraphile-plugin-many-create-update-delete"},"postgraphile-plugin-many-create-update-delete")," -\ngenerates batch create, update, & delete mutations"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/pyramation/graphile-column-privileges-mutations"},"graphile-column-privileges-mutations")," -\ngenerates mutations safe to use with column-level select grants"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/jarvisuser90/postgraphile-remove-foreign-key-fields-plugin"},"postgraphile-remove-foreign-key-fields-plugin")," -\nRemoves all foreign key fields from the GraphQL schema while still allowing\nforeign relationships to be created."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/RedShift1/postgraphile-plugin-timestamp-format"},"postgraphile-plugin-timestamp-format")," -\nFormat timestamps with PostgreSQL's to_char function. Supports timezones too")),(0,a.kt)("p",null,"Examples of using these plugins:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mattbretl/postgraphile-upload-example"},"postgraphile-upload-example")," -\ndemonstrates how to add file upload support to PostGraphile using the GraphQL\nMultipart Request Spec.")),(0,a.kt)("p",null,"These extensions extend PostGraphile in different ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/mshick/hapi-postgraphile"},"hapi-postgraphile")," - add\nPostGraphile to your HAPI application")))}h.isMDXComponent=!0}}]);