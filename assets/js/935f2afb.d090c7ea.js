"use strict";(self.webpackChunk_localrepo_grafast_website=self.webpackChunk_localrepo_grafast_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Grafast Introduction","href":"/grafast/","docId":"index"},{"type":"category","label":"Getting started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Using with existing schema","href":"/grafast/getting-started/existing-schema","docId":"getting-started/existing-schema"}],"href":"/grafast/getting-started/"},{"type":"link","label":"Servers","href":"/grafast/servers","docId":"servers"},{"type":"link","label":"Plan resolvers","href":"/grafast/plan-resolvers","docId":"plan-resolvers"},{"type":"category","label":"Step library","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Standard steps","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"access","href":"/grafast/step-library/standard-steps/access","docId":"step-library/standard-steps/access"},{"type":"link","label":"condition","href":"/grafast/step-library/standard-steps/condition","docId":"step-library/standard-steps/condition"},{"type":"link","label":"connection","href":"/grafast/step-library/standard-steps/connection","docId":"step-library/standard-steps/connection"},{"type":"link","label":"constant","href":"/grafast/step-library/standard-steps/constant","docId":"step-library/standard-steps/constant"},{"type":"link","label":"context","href":"/grafast/step-library/standard-steps/context","docId":"step-library/standard-steps/context"},{"type":"link","label":"each","href":"/grafast/step-library/standard-steps/each","docId":"step-library/standard-steps/each"},{"type":"link","label":"error","href":"/grafast/step-library/standard-steps/error","docId":"step-library/standard-steps/error"},{"type":"link","label":"filter","href":"/grafast/step-library/standard-steps/filter","docId":"step-library/standard-steps/filter"},{"type":"link","label":"first","href":"/grafast/step-library/standard-steps/first","docId":"step-library/standard-steps/first"},{"type":"link","label":"groupBy","href":"/grafast/step-library/standard-steps/groupBy","docId":"step-library/standard-steps/groupBy"},{"type":"link","label":"lambda","href":"/grafast/step-library/standard-steps/lambda","docId":"step-library/standard-steps/lambda"},{"type":"link","label":"last","href":"/grafast/step-library/standard-steps/last","docId":"step-library/standard-steps/last"},{"type":"link","label":"list","href":"/grafast/step-library/standard-steps/list","docId":"step-library/standard-steps/list"},{"type":"link","label":"listen","href":"/grafast/step-library/standard-steps/listen","docId":"step-library/standard-steps/listen"},{"type":"link","label":"loadMany","href":"/grafast/step-library/standard-steps/loadMany","docId":"step-library/standard-steps/loadMany"},{"type":"link","label":"loadOne","href":"/grafast/step-library/standard-steps/loadOne","docId":"step-library/standard-steps/loadOne"},{"type":"link","label":"node","href":"/grafast/step-library/standard-steps/node","docId":"step-library/standard-steps/node"},{"type":"link","label":"object","href":"/grafast/step-library/standard-steps/object","docId":"step-library/standard-steps/object"},{"type":"link","label":"polymorphicBranch","href":"/grafast/step-library/standard-steps/polymorphicBranch","docId":"step-library/standard-steps/polymorphicBranch"},{"type":"link","label":"remapKeys","href":"/grafast/step-library/standard-steps/remapKeys","docId":"step-library/standard-steps/remapKeys"},{"type":"link","label":"reverse","href":"/grafast/step-library/standard-steps/reverse","docId":"step-library/standard-steps/reverse"},{"type":"link","label":"setter","href":"/grafast/step-library/standard-steps/setter","docId":"step-library/standard-steps/setter"},{"type":"link","label":"sideEffect","href":"/grafast/step-library/standard-steps/sideEffect","docId":"step-library/standard-steps/sideEffect"}],"href":"/grafast/step-library/standard-steps/"},{"type":"category","label":"@dataplan/json","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"jsonParse","href":"/grafast/step-library/dataplan-json/jsonParse","docId":"step-library/dataplan-json/jsonParse"}],"href":"/grafast/step-library/dataplan-json/"},{"type":"category","label":"@dataplan/pg","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Registry","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Codecs","href":"/grafast/step-library/dataplan-pg/registry/codecs","docId":"step-library/dataplan-pg/registry/codecs"},{"type":"link","label":"Resources","href":"/grafast/step-library/dataplan-pg/registry/resources","docId":"step-library/dataplan-pg/registry/resources"},{"type":"link","label":"Relations","href":"/grafast/step-library/dataplan-pg/registry/relations","docId":"step-library/dataplan-pg/registry/relations"},{"type":"link","label":"Full registry example","href":"/grafast/step-library/dataplan-pg/registry/example","docId":"step-library/dataplan-pg/registry/example"}],"href":"/grafast/step-library/dataplan-pg/registry/"},{"type":"link","label":"Adaptors","href":"/grafast/step-library/dataplan-pg/adaptors","docId":"step-library/dataplan-pg/adaptors"},{"type":"link","label":"pgSelect and pgSelectSingle","href":"/grafast/step-library/dataplan-pg/pgSelect","docId":"step-library/dataplan-pg/pgSelect"},{"type":"link","label":"pgClassExpression","href":"/grafast/step-library/dataplan-pg/pgClassExpression","docId":"step-library/dataplan-pg/pgClassExpression"},{"type":"link","label":"pgCondition","href":"/grafast/step-library/dataplan-pg/pgCondition","docId":"step-library/dataplan-pg/pgCondition"},{"type":"link","label":"pgDeleteSingle","href":"/grafast/step-library/dataplan-pg/pgDeleteSingle","docId":"step-library/dataplan-pg/pgDeleteSingle"},{"type":"link","label":"pgInsertSingle","href":"/grafast/step-library/dataplan-pg/pgInsertSingle","docId":"step-library/dataplan-pg/pgInsertSingle"},{"type":"link","label":"pgPolymorphic","href":"/grafast/step-library/dataplan-pg/pgPolymorphic","docId":"step-library/dataplan-pg/pgPolymorphic"},{"type":"link","label":"pgSingleTablePolymorphic","href":"/grafast/step-library/dataplan-pg/pgSingleTablePolymorphic","docId":"step-library/dataplan-pg/pgSingleTablePolymorphic"},{"type":"link","label":"pgUnionAll","href":"/grafast/step-library/dataplan-pg/pgUnionAll","docId":"step-library/dataplan-pg/pgUnionAll"},{"type":"link","label":"pgUpdateSingle","href":"/grafast/step-library/dataplan-pg/pgUpdateSingle","docId":"step-library/dataplan-pg/pgUpdateSingle"},{"type":"link","label":"Polymorphism","href":"/grafast/step-library/dataplan-pg/polymorphism","docId":"step-library/dataplan-pg/polymorphism"},{"type":"link","label":"withPgClient and withPgClientTransaction","href":"/grafast/step-library/dataplan-pg/withPgClient","docId":"step-library/dataplan-pg/withPgClient"}],"href":"/grafast/step-library/dataplan-pg/"}],"href":"/grafast/step-library/"},{"type":"link","label":"Step classes","href":"/grafast/step-classes","docId":"step-classes"},{"type":"link","label":"Request overview","href":"/grafast/request-overview","docId":"request-overview"},{"type":"link","label":"Operation plan","href":"/grafast/operation-plan","docId":"operation-plan"},{"type":"link","label":"Access control","href":"/grafast/access-control","docId":"access-control"},{"type":"link","label":"Plan diagrams","href":"/grafast/plan-diagrams","docId":"plan-diagrams"},{"type":"link","label":"Polymorphism","href":"/grafast/polymorphism","docId":"polymorphism"},{"type":"link","label":"Production Considerations","href":"/grafast/production-considerations","docId":"production-considerations"}]},"docs":{"access-control":{"id":"access-control","title":"Access control","description":"Access control is typically the responsibility of your business logic layer, as","sidebar":"tutorialSidebar"},"getting-started/existing-schema":{"id":"getting-started/existing-schema","title":"Using with existing schema","description":"Requirements","sidebar":"tutorialSidebar"},"getting-started/index":{"id":"getting-started/index","title":"Getting started","description":"Installation","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Grafast Introduction","description":"This introduction to Grafast assumes that you have a basic understanding of","sidebar":"tutorialSidebar"},"operation-plan":{"id":"operation-plan","title":"Operation plan","description":"If you\'re unfamiliar with GraphQL terminology such as \\"selection set\\", \\"field\\",","sidebar":"tutorialSidebar"},"plan-diagrams":{"id":"plan-diagrams","title":"Plan diagrams","description":"A plan diagram is a directed acyclic graph made of a number of step nodes","sidebar":"tutorialSidebar"},"plan-resolvers":{"id":"plan-resolvers","title":"Plan resolvers","description":"When planning a GraphQL operation, we combine the plans from every field","sidebar":"tutorialSidebar"},"polymorphism":{"id":"polymorphism","title":"Polymorphism","description":"GraphQL has two types of output polymorphism currently: interfaces and unions.","sidebar":"tutorialSidebar"},"production-considerations":{"id":"production-considerations","title":"Production Considerations","description":"Overview","sidebar":"tutorialSidebar"},"request-overview":{"id":"request-overview","title":"Request overview","description":"The following deliberately over-simplifies the inner workings of  by","sidebar":"tutorialSidebar"},"servers":{"id":"servers","title":"Servers","description":"The most common use of a GraphQL schema is via an HTTP API. Serving a","sidebar":"tutorialSidebar"},"step-classes":{"id":"step-classes","title":"Step classes","description":"A step details a particular action or transform that needs to be performed when","sidebar":"tutorialSidebar"},"step-library/dataplan-json/index":{"id":"step-library/dataplan-json/index","title":"@dataplan/json","description":"- jsonParse: parses a JSON string","sidebar":"tutorialSidebar"},"step-library/dataplan-json/jsonParse":{"id":"step-library/dataplan-json/jsonParse","title":"jsonParse","description":"Returns a step that represents the JSON.parse\'d value of the string. On null,","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/adaptors":{"id":"step-library/dataplan-pg/adaptors","title":"Adaptors","description":"@dataplan/pg can use any client to communicate with your database, so long as","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/index":{"id":"step-library/dataplan-pg/index","title":"@dataplan/pg","description":"This collection of steps gives incredible performance when dealing with","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/pgClassExpression":{"id":"step-library/dataplan-pg/pgClassExpression","title":"pgClassExpression","description":"A pgClassExpression represents the value of an SQL expression extracted from a","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/pgCondition":{"id":"step-library/dataplan-pg/pgCondition","title":"pgCondition","description":"This \\"modifier step\\" (not an ExecutableStep) is commonly acquired from","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/pgDeleteSingle":{"id":"step-library/dataplan-pg/pgDeleteSingle","title":"pgDeleteSingle","description":"Deletes a single row from the given resource, identified by the given unique","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/pgInsertSingle":{"id":"step-library/dataplan-pg/pgInsertSingle","title":"pgInsertSingle","description":"Inserts a single row into the given resource, setting the given attributes (if any).","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/pgPolymorphic":{"id":"step-library/dataplan-pg/pgPolymorphic","title":"pgPolymorphic","description":"This step class gives just one of many ways of supporting polymorphism in","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/pgSelect":{"id":"step-library/dataplan-pg/pgSelect","title":"pgSelect and pgSelectSingle","description":"Though you don\'t typically create a pgSelect() or pgSelectSingle() step","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/pgSingleTablePolymorphic":{"id":"step-library/dataplan-pg/pgSingleTablePolymorphic","title":"pgSingleTablePolymorphic","description":"This step class gives just one of many ways of supporting polymorphism in","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/pgUnionAll":{"id":"step-library/dataplan-pg/pgUnionAll","title":"pgUnionAll","description":"If you need to pull data from multiple tables and cannot use joins to do so,","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/pgUpdateSingle":{"id":"step-library/dataplan-pg/pgUpdateSingle","title":"pgUpdateSingle","description":"Updates a single row within the given resource identified by the given spec and setting the given attributes (if any).","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/polymorphism":{"id":"step-library/dataplan-pg/polymorphism","title":"Polymorphism","description":"Polymorphism in PostgreSQL schemas can take many forms. @dataplan/pg has two","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/registry/codecs":{"id":"step-library/dataplan-pg/registry/codecs","title":"Codecs","description":"A PgCodec (\\"codec\\") represents a type (data type) in the database. There are","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/registry/example":{"id":"step-library/dataplan-pg/registry/example","title":"Full registry example","description":"A registry for a simple schema using two tables \'forums\' and \'messages\' might","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/registry/index":{"id":"step-library/dataplan-pg/registry/index","title":"Registry","description":"The registry contains all of the codecs,","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/registry/relations":{"id":"step-library/dataplan-pg/registry/relations","title":"Relations","description":"In @dataplan/pg, a relation is a uni-directional link from a","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/registry/resources":{"id":"step-library/dataplan-pg/registry/resources","title":"Resources","description":"A resource represents entities in the database from which you can extract data,","sidebar":"tutorialSidebar"},"step-library/dataplan-pg/withPgClient":{"id":"step-library/dataplan-pg/withPgClient","title":"withPgClient and withPgClientTransaction","description":"Sometimes you want to use your PostgreSQL client directly, e.g. to run","sidebar":"tutorialSidebar"},"step-library/index":{"id":"step-library/index","title":"Step library","description":"A step class is a JavaScript class that extends ExecutableStep with an","sidebar":"tutorialSidebar"},"step-library/standard-steps/access":{"id":"step-library/standard-steps/access","title":"access","description":"Accesses a (potentially nested) property from the result of a source step.","sidebar":"tutorialSidebar"},"step-library/standard-steps/condition":{"id":"step-library/standard-steps/condition","title":"condition","description":"Applies the given (unary or binary) condition to the step(s) and returns a step","sidebar":"tutorialSidebar"},"step-library/standard-steps/connection":{"id":"step-library/standard-steps/connection","title":"connection","description":"Wraps a collection fetch to provide the utilities for working with GraphQL","sidebar":"tutorialSidebar"},"step-library/standard-steps/constant":{"id":"step-library/standard-steps/constant","title":"constant","description":"Converts a constant value (e.g. a string/number/etc) into a step; every value","sidebar":"tutorialSidebar"},"step-library/standard-steps/context":{"id":"step-library/standard-steps/context","title":"context","description":"Returns a step representing the GraphQL contextValue.","sidebar":"tutorialSidebar"},"step-library/standard-steps/each":{"id":"step-library/standard-steps/each","title":"each","description":"Transforms a list by wrapping each element in the list with the given mapper.","sidebar":"tutorialSidebar"},"step-library/standard-steps/error":{"id":"step-library/standard-steps/error","title":"error","description":"A bit like constant, except it always throws the given error.","sidebar":"tutorialSidebar"},"step-library/standard-steps/filter":{"id":"step-library/standard-steps/filter","title":"filter","description":"Filters a list plan to only include entries for which the filterCallback plan","sidebar":"tutorialSidebar"},"step-library/standard-steps/first":{"id":"step-library/standard-steps/first","title":"first","description":"Resolves to the first entry in the list returned by the given step.","sidebar":"tutorialSidebar"},"step-library/standard-steps/groupBy":{"id":"step-library/standard-steps/groupBy","title":"groupBy","description":"Takes a single dimensional list step and a mapper that returns a grouping key.","sidebar":"tutorialSidebar"},"step-library/standard-steps/index":{"id":"step-library/standard-steps/index","title":"Standard steps","description":"Loading data","sidebar":"tutorialSidebar"},"step-library/standard-steps/lambda":{"id":"step-library/standard-steps/lambda","title":"lambda","description":"Takes the input step (or array of steps, or nothing) as the first argument, a","sidebar":"tutorialSidebar"},"step-library/standard-steps/last":{"id":"step-library/standard-steps/last","title":"last","description":"Resolves to the last entry in the list returned by the given step.","sidebar":"tutorialSidebar"},"step-library/standard-steps/list":{"id":"step-library/standard-steps/list","title":"list","description":"Takes a list of plans and turns it into a single plan that represents the list","sidebar":"tutorialSidebar"},"step-library/standard-steps/listen":{"id":"step-library/standard-steps/listen","title":"listen","description":"Subscribes to the given pubsubOrPlan to get realtime updates on a given topic","sidebar":"tutorialSidebar"},"step-library/standard-steps/loadMany":{"id":"step-library/standard-steps/loadMany","title":"loadMany","description":"Similar to DataLoader\'s load method, uses the given callback function to","sidebar":"tutorialSidebar"},"step-library/standard-steps/loadOne":{"id":"step-library/standard-steps/loadOne","title":"loadOne","description":"Similar to DataLoader\'s load method, uses the given callback function to","sidebar":"tutorialSidebar"},"step-library/standard-steps/node":{"id":"step-library/standard-steps/node","title":"node","description":"A step to get a Node by its global object identifier (string). Accepts two parameters:","sidebar":"tutorialSidebar"},"step-library/standard-steps/object":{"id":"step-library/standard-steps/object","title":"object","description":"Builds an object using the keys given and the values being the results of the","sidebar":"tutorialSidebar"},"step-library/standard-steps/polymorphicBranch":{"id":"step-library/standard-steps/polymorphicBranch","title":"polymorphicBranch","description":"The polymorphicBranch step is a utility step to handles generic polymorphic","sidebar":"tutorialSidebar"},"step-library/standard-steps/remapKeys":{"id":"step-library/standard-steps/remapKeys","title":"remapKeys","description":"Returns an object resulting from extracting the given actualKey from the input","sidebar":"tutorialSidebar"},"step-library/standard-steps/reverse":{"id":"step-library/standard-steps/reverse","title":"reverse","description":"Returns a new list that\'s in reverse order of the given list.","sidebar":"tutorialSidebar"},"step-library/standard-steps/setter":{"id":"step-library/standard-steps/setter","title":"setter","description":"A ModifierStep for setting given values onto a parent step.","sidebar":"tutorialSidebar"},"step-library/standard-steps/sideEffect":{"id":"step-library/standard-steps/sideEffect","title":"sideEffect","description":"Takes the input step (or array of steps, or nothing) as the first argument, a","sidebar":"tutorialSidebar"}}}')}}]);