"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[4143],{30876:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(2784);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(a),h=r,d=u["".concat(l,".").concat(h)]||u[h]||m[h]||o;return a?n.createElement(d,s(s({ref:t},c),{},{components:a})):n.createElement(d,s({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},72840:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=a(7896),r=(a(2784),a(30876));const o={layout:"page",path:"/postgraphile/namespaces/",title:'Namespaces (PostgreSQL "schemas")'},s=void 0,i={unversionedId:"namespaces",id:"version-4.x/namespaces",title:'Namespaces (PostgreSQL "schemas")',description:'In PostgreSQL, each database consists of a number of "schemas". The default',source:"@site/versioned_docs/version-4.x/namespaces.md",sourceDirName:".",slug:"/namespaces",permalink:"/postgraphile/current/namespaces",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/versioned_docs/version-4.x/namespaces.md",tags:[],version:"4.x",frontMatter:{layout:"page",path:"/postgraphile/namespaces/",title:'Namespaces (PostgreSQL "schemas")'},sidebar:"docs",previous:{title:"Quick Start Guide",permalink:"/postgraphile/current/quick-start-guide"},next:{title:"Inflection",permalink:"/postgraphile/current/inflection"}},l={},p=[{value:"Advice",id:"advice",level:3},{value:"Other schemas",id:"other-schemas",level:3}],c={toc:p},u="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,'In PostgreSQL, each database consists of a number of "schemas". The default\nschema is named "public" and many users only ever deal with this one schema.'),(0,r.kt)("p",null,"In PostGraphile we advise you to use schemas to help organise your application -\nyou can use one schema for the tables that will be exposed to GraphQL, another\nfor the tables that should be completely private (e.g. where you store the\nbcrypted user passwords or other secrets never to be exposed!), and you can use\nother schemas too, whatever makes sense for your application."),(0,r.kt)("p",null,"To create a schema in PostgreSQL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE SCHEMA app_public;\n")),(0,r.kt)("p",null,"To create or reference something in that schema, just prepend the name of the\nthing with the schema name, e.g:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE app_public.users ( ... );\nCREATE FUNCTION app_public.best_user() ...;\n\nSELECT * FROM app_public.users;\nSELECT * FROM app_public.best_user();\n")),(0,r.kt)("h3",{id:"advice"},"Advice"),(0,r.kt)("p",null,"Having built quite a few applications on PostGraphile now, I (Benjie) have\nsettled on the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"app_public")," - tables and functions to be exposed to GraphQL (or any other\nsystem) - it's your public interface. This is the main part of your database."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"app_hidden")," - same privileges as ",(0,r.kt)("inlineCode",{parentName:"li"},"app_public"),", but it's not intended to be\nexposed publicly. It's like \"implementation details\" of your app_public\nschema. You may not need it often."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"app_private")," - SUPER SECRET STUFF \ud83d\udd75\ufe0f No-one should be able to read this\nwithout a ",(0,r.kt)("inlineCode",{parentName:"li"},"SECURITY DEFINER")," function letting them selectively do things. This\nis where you store passwords (bcrypted), access tokens (hopefully encrypted),\netc. It should be impossible (thanks to RBAC (",(0,r.kt)("inlineCode",{parentName:"li"},"GRANT"),"/",(0,r.kt)("inlineCode",{parentName:"li"},"REVOKE"),")) for web users\nto access this.")),(0,r.kt)("p",null,"I personally don't use the ",(0,r.kt)("inlineCode",{parentName:"p"},"public")," schema for anything other than as the\n",(0,r.kt)("a",{parentName:"p",href:"https://www.postgresql.org/docs/current/static/sql-createextension.html"},"default location that PostgreSQL extensions get installed"),"."),(0,r.kt)("p",null,"Using this pattern is ",(0,r.kt)("strong",{parentName:"p"},"not required")," and in fact you can just use the default\n",(0,r.kt)("inlineCode",{parentName:"p"},"public")," schema if you so chose. By default, PostGraphile will automatically\nignore resources installed by extensions, so you don't need to omit these\nmanually. Other tables and functions can be omitted using the\n",(0,r.kt)("a",{parentName:"p",href:"./smart-comments/"},"smart comments")," functionality."),(0,r.kt)("h3",{id:"other-schemas"},"Other schemas"),(0,r.kt)("p",null,"Here's some other schemas you might see (but should not modify):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"graphile_worker")," - a schema used and managed by\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/graphile/worker"},"https://github.com/graphile/worker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"graphile_migrate")," - a schema used and managed by\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/graphile/migrate"},"https://github.com/graphile/migrate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"postgraphile_watch")," - if you're using PostGraphile in watch mode (",(0,r.kt)("inlineCode",{parentName:"li"},"--watch"),"\nor ",(0,r.kt)("inlineCode",{parentName:"li"},"watchPg: true"),"), PostGraphile will install this schema to create\n",(0,r.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/current/sql-createeventtrigger.html"},"PostgreSQL Event Triggers"),"\nto enable watch mode."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"information_schema")," - a SQL standard schema for reflection over the database:\n",(0,r.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/current/information-schema.html"},"https://www.postgresql.org/docs/current/information-schema.html")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pg_catalog")," - the\n",(0,r.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/current/catalogs.html"},"PostgreSQL system catalog"),",\ncontain details of everything inside the database (a more PG-native form of\n",(0,r.kt)("inlineCode",{parentName:"li"},"information_schema"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pg_*")," - various other PostgreSQL reserved schemas")))}m.isMDXComponent=!0}}]);