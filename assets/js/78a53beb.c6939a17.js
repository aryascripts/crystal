"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[9642],{30876:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(2784);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return n?a.createElement(g,i(i({ref:t},u),{},{components:n})):a.createElement(g,i({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},82009:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(2784),r=n(524);const l={tabItem:"tabItem_OMyP"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,i),hidden:n},t)}},77336:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7896),r=n(2784),l=n(524),i=n(24126),o=n(7267),s=n(32424),p=n(42244),u=n(24155);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function m(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(a.location.search);t.set(l,e),a.replace({...a.location,search:t.toString()})}),[l,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,l=m(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[s,p]=g({queryString:n,groupId:a}),[c,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,l]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:a}),f=(()=>{const e=s??c;return d({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),h(e)}),[p,h,l]),tabValues:l}}var f=n(89741);const b={tabList:"tabList_M0Dn",tabItem:"tabItem_ysIP"};function k(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),m=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==o&&(c(t),s(a))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:m},i,{className:(0,l.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":o===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=h(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b.tabList)},r.createElement(k,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function N(e){const t=(0,f.Z)();return r.createElement(v,(0,a.Z)({key:String(t)},e))}},63063:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=n(7896),r=(n(2784),n(30876)),l=n(77336),i=n(82009);const o={title:"Usage - Command Line"},s="Command Line Interface",p={unversionedId:"usage-cli",id:"usage-cli",title:"Usage - Command Line",description:"The easiest way to get up and running with PostGraphile is to use the Command",source:"@site/postgraphile/usage-cli.mdx",sourceDirName:".",slug:"/usage-cli",permalink:"/postgraphile/next/usage-cli",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/postgraphile/usage-cli.mdx",tags:[],version:"current",frontMatter:{title:"Usage - Command Line"},sidebar:"docs",previous:{title:"Usage",permalink:"/postgraphile/next/usage"},next:{title:"Usage - Library",permalink:"/postgraphile/next/usage-library"}},u={},c=[{value:"CLI flags",id:"cli-flags",level:3},{value:"<code>pgl</code> vs <code>postgraphile</code>",id:"pgl-vs-postgraphile",level:2}],m={toc:c},d="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"command-line-interface"},"Command Line Interface"),(0,r.kt)("p",null,"The easiest way to get up and running with PostGraphile is to use the Command\nLine Interface."),(0,r.kt)("p",null,"To try without installing, run the ",(0,r.kt)("inlineCode",{parentName:"p"},"pgl")," command via the ",(0,r.kt)("inlineCode",{parentName:"p"},"npx")," command that\ncomes bundled with Node.js:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npx pgl@beta -P pgl/amber -e -c postgres:///mydb\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You should replace ",(0,r.kt)("inlineCode",{parentName:"p"},"postgres:///mydb")," with a PostgreSQL connection string\npointing at your database, and if you use a non-standard PostgreSQL schema you\nshould indicate the schema name via ",(0,r.kt)("inlineCode",{parentName:"p"},"-s my_schema_name_here"),".")),(0,r.kt)("p",null,"For a more permanent installation we suggest you create yourself a new\ndirectory for your project, we'll refer to this as ",(0,r.kt)("inlineCode",{parentName:"p"},"~/postgraphile"),". Open a\nterminal in this directory and install PostGraphile:"),(0,r.kt)(l.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/postgraphile\nnpm install postgraphile@beta\n"))),(0,r.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/postgraphile\nyarn add postgraphile@beta\n"))),(0,r.kt)(i.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~/postgraphile\npnpm add postgraphile@beta\n")))),(0,r.kt)("p",null,"You can then run PostGraphile equivalent to above via:"),(0,r.kt)(l.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx postgraphile -P postgraphile/presets/amber -e -c postgres:///mydb\n"))),(0,r.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx postgraphile -P postgraphile/presets/amber -e -c postgres:///mydb\n"))),(0,r.kt)(i.Z,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx postgraphile -P postgraphile/presets/amber -e -c postgres:///mydb\n")))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"-e")," option should only be used in development.")),(0,r.kt)("h3",{id:"cli-flags"},"CLI flags"),(0,r.kt)("p",null,"The CLI accepts a small number of configuration options to get you started. It\nalso reads ",(0,r.kt)("a",{parentName:"p",href:"/postgraphile/next/config"},"options from a ",(0,r.kt)("inlineCode",{parentName:"a"},"graphile.config.js"))," file from the\ncurrent working directory (if it exists); by specifying all options in this file\nyou can run PostGraphile with no (or minimal) CLI flags."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--version"),(0,r.kt)("br",{parentName:"li"}),"output the version number"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--help"),(0,r.kt)("br",{parentName:"li"}),"output usage information"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--preset <string>")," (alias: ",(0,r.kt)("inlineCode",{parentName:"li"},"-P"),")",(0,r.kt)("equivalent",null,"{ extends: [...] }"),"can be used to specify a comma-separated list of presets to add to the configuration"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--allow-explain")," (alias: ",(0,r.kt)("inlineCode",{parentName:"li"},"-e"),")",(0,r.kt)("equivalent",null,"{ grafast: { explain: true } }"),"enables \"explain\" mode, you won't want this in production but it's very helpful in development to know what's going on"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--connection <string>")," (alias: ",(0,r.kt)("inlineCode",{parentName:"li"},"-c"),")",(0,r.kt)("equivalent",null,"{ pgServices: [makePgService({ connectionString: '...' })] }"),"the PostgreSQL connection string. If omitted, inferred from ",(0,r.kt)("a",{href:"https://www.postgresql.org/docs/current/static/libpq-envars.html"},"environmental variables"),".",(0,r.kt)("br",null),"Examples: ",(0,r.kt)("code",null,"db"),", ",(0,r.kt)("code",null,"postgres:///db"),", ",(0,r.kt)("code",null,"postgres://user:password@domain:port/db?ssl=true")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--superuser-connection <string>")," (alias: ",(0,r.kt)("inlineCode",{parentName:"li"},"-S"),")",(0,r.kt)("equivalent",null,"{ pgServices: [makePgService({ superuserConnectionString:'...' })] }"),"the PostgreSQL superuser connection string to use for installing watch fixtures (if ",(0,r.kt)("code",null,"--watch")," is enabled). If omitted, the regular connection string will be used."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--schema <string>")," (alias: ",(0,r.kt)("inlineCode",{parentName:"li"},"-s"),")",(0,r.kt)("equivalent",null,"{ pgServices: [makePgService({ schemas: ['...'] })] }"),"a comma-separated list of PostgreSQL schemas to be introspected."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--watch")," (alias: ",(0,r.kt)("inlineCode",{parentName:"li"},"-w"),")",(0,r.kt)("equivalent",null,"{ grafserv: { watch: true } }"),"automatically updates your GraphQL schema when your database schema changes (NOTE: requires DB superuser to install ",(0,r.kt)("code",null,"postgraphile_watch")," schema)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--host <string>")," (alias: ",(0,r.kt)("inlineCode",{parentName:"li"},"-n"),")",(0,r.kt)("equivalent",null,"{ grafserv: { host: 'localhost' } }"),"the hostname to be used. Defaults to ",(0,r.kt)("code",null,"localhost")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--port <number>")," (alias: ",(0,r.kt)("inlineCode",{parentName:"li"},"-p"),")",(0,r.kt)("equivalent",null,"{ grafserv: { port: 5678 } }"),"the port to be used. Defaults to 5678")),(0,r.kt)("h2",{id:"pgl-vs-postgraphile"},(0,r.kt)("inlineCode",{parentName:"h2"},"pgl")," vs ",(0,r.kt)("inlineCode",{parentName:"h2"},"postgraphile")),(0,r.kt)("p",null,"New to V5 if PostGraphile is the ",(0,r.kt)("inlineCode",{parentName:"p"},"pgl")," command. This is almost identical to the\n",(0,r.kt)("inlineCode",{parentName:"p"},"postgraphile")," command (it actually defers to ",(0,r.kt)("inlineCode",{parentName:"p"},"postgraphile")," under the hood),\nwith the following differences:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pgl")," has no ",(0,r.kt)("inlineCode",{parentName:"li"},"peerDependencies")," - as soon as you start installing plugins that need peerDependencies you should consider moving to ",(0,r.kt)("inlineCode",{parentName:"li"},"postgraphile")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pgl")," exposes ",(0,r.kt)("inlineCode",{parentName:"li"},"postgraphile/presets/amber")," as ",(0,r.kt)("inlineCode",{parentName:"li"},"pgl/amber")," (and similar for ",(0,r.kt)("inlineCode",{parentName:"li"},"pgl/v4")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"pgl/relay"),"), so it's more concise")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"pgl")," is most suitable for running from ",(0,r.kt)("inlineCode",{parentName:"p"},"npx")," without the need to permanently\ninstall anything. If you want to start using PostGraphile in your project you\nshould install ",(0,r.kt)("inlineCode",{parentName:"p"},"postgraphile")," instead.")))}g.isMDXComponent=!0}}]);