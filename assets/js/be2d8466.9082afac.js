"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[6615],{30876:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(2784);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=p(n),c=i,h=d["".concat(s,".").concat(c)]||d[c]||u[c]||r;return n?a.createElement(h,l(l({ref:t},m),{},{components:n})):a.createElement(h,l({ref:t},m))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},80255:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(74224),i=n(2784);function r(){return i.createElement(i.Fragment,null,i.createElement("span",{className:a.Z.proTag},i.createElement("a",{href:"/pricing/"},i.createElement("span",{className:a.Z.firstLetter},"P"),"ro")))}},50058:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(74224),i=n(2784);function r(){return i.createElement(i.Fragment,null,i.createElement("span",{className:a.Z.sponTag},i.createElement("a",{href:"/sponsor/"},i.createElement("span",{className:a.Z.firstLetter},"S"),"pon")))}},92956:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var a=n(7896),i=(n(2784),n(30876)),r=n(80255),l=n(50058);const o={layout:"page",path:"/postgraphile/usage-cli/",title:"Command Line Interface"},s=void 0,p={unversionedId:"usage-cli",id:"version-4.x/usage-cli",title:"Command Line Interface",description:"The easiest way to get up and running with PostGraphile is to use the Command",source:"@site/versioned_docs/version-4.x/usage-cli.md",sourceDirName:".",slug:"/usage-cli",permalink:"/postgraphile/current/usage-cli",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/versioned_docs/version-4.x/usage-cli.md",tags:[],version:"4.x",frontMatter:{layout:"page",path:"/postgraphile/usage-cli/",title:"Command Line Interface"},sidebar:"docs",previous:{title:"Usage",permalink:"/postgraphile/current/usage"},next:{title:"PostGraphile as a Library",permalink:"/postgraphile/current/usage-library"}},m={},d=[{value:"Recommended options",id:"recommended-options",level:3},{value:"For Development",id:"for-development",level:4},{value:"For Production",id:"for-production",level:4},{value:"CLI options",id:"cli-options",level:3},{value:"RC file options",id:"rc-file-options",level:3}],u={toc:d},c="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The easiest way to get up and running with PostGraphile is to use the Command\nLine Interface."),(0,i.kt)("p",null,"Install PostGraphile globally via npm:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g postgraphile\n")),(0,i.kt)("p",null,"This will make the ",(0,i.kt)("inlineCode",{parentName:"p"},"postgraphile")," command available. You can then run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"postgraphile -c postgres:///mydb -s public -a -j\n")),(0,i.kt)("p",null,"where ",(0,i.kt)("inlineCode",{parentName:"p"},"-c")," is the connection string (defaults to ",(0,i.kt)("inlineCode",{parentName:"p"},"postgres:///"),"), ",(0,i.kt)("inlineCode",{parentName:"p"},"-s"),' is the\nschema name (defaults to "public"), ',(0,i.kt)("inlineCode",{parentName:"p"},"-a")," enables Relay support and ",(0,i.kt)("inlineCode",{parentName:"p"},"-j")," enables\ndynamic JSON."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"macOS users"),": you should also use the ",(0,i.kt)("inlineCode",{parentName:"p"},"--port")," option to bind to a different\nport, the default port 5000 now conflicts with macOS Monterey's new AirPlay\nservice."),(0,i.kt)("p",null,"PostGraphile also reads options from a ",(0,i.kt)("inlineCode",{parentName:"p"},".postgraphilerc.js")," file from the\ncurrent working directory."),(0,i.kt)("h3",{id:"recommended-options"},"Recommended options"),(0,i.kt)("p",null,"As PostGraphile evolves, we add more features; however we can't always enable\nthese features by default as they may be breaking changes. There are also\noptions that may have security repercussions. For this reason, many features are\nbehind flags. We understand this page is very long, so we've included some\ndefault option sets you might like to use:"),(0,i.kt)("p",null,"We recommend you install the ",(0,i.kt)("inlineCode",{parentName:"p"},"@graphile-contrib/pg-simplify-inflector")," plugin."),(0,i.kt)("h4",{id:"for-development"},"For Development"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'postgraphile \\\n  --subscriptions \\\n  --watch \\\n  --dynamic-json \\\n  --no-setof-functions-contain-nulls \\\n  --no-ignore-rbac \\\n  --show-error-stack=json \\\n  --extended-errors hint,detail,errcode \\\n  --append-plugins @graphile-contrib/pg-simplify-inflector \\\n  --export-schema-graphql schema.graphql \\\n  --graphiql "/" \\\n  --enhance-graphiql \\\n  --allow-explain \\\n  --enable-query-batching \\\n  --legacy-relations omit \\\n  --connection $DATABASE_URL \\\n  --schema app_public\n')),(0,i.kt)("h4",{id:"for-production"},"For Production"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"postgraphile \\\n  --subscriptions \\\n  --retry-on-init-fail \\\n  --dynamic-json \\\n  --no-setof-functions-contain-nulls \\\n  --no-ignore-rbac \\\n  --extended-errors errcode \\\n  --append-plugins @graphile-contrib/pg-simplify-inflector \\\n  --disable-graphiql \\\n  --enable-query-batching \\\n  --disable-query-log \\ # our default logging has performance issues, but do make sure you have a logging system in place!\n  --legacy-relations omit \\\n  --connection $DATABASE_URL \\\n  --schema app_public\n")),(0,i.kt)("h3",{id:"cli-options"},"CLI options"),(0,i.kt)("p",null,"There are more CLI options available to customise the GraphQL server (these are\nfrom ",(0,i.kt)("tt",null,(0,i.kt)("a",{parentName:"p",href:"mailto:postgraphile@4.12.3"},"postgraphile@4.12.3")),"):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-V"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--version"),(0,i.kt)("br",{parentName:"li"}),"output the version number"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--plugins <string>"),(0,i.kt)("br",{parentName:"li"}),"a list of PostGraphile server plugins (not Graphile Engine schema plugins) to\nload; if present, must be the ",(0,i.kt)("em",{parentName:"li"},"first")," option"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-c"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--connection <string>"),(0,i.kt)("br",{parentName:"li"}),"the PostgreSQL database name or connection string. If omitted, inferred from\nenvironmental variables (see\n",(0,i.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/current/static/libpq-envars.html"},"https://www.postgresql.org/docs/current/static/libpq-envars.html"),"). Examples:\n'db', 'postgres:///db', 'postgres://user:password@domain:port/db?ssl=true'"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-C"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--owner-connection <string>"),(0,i.kt)("br",{parentName:"li"}),"as ",(0,i.kt)("inlineCode",{parentName:"li"},"--connection"),", but for a privileged user (e.g. for setting up watch\nfixtures, logical decoding, etc); defaults to the value from ",(0,i.kt)("inlineCode",{parentName:"li"},"--connection")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-s"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--schema <string>"),(0,i.kt)("br",{parentName:"li"}),"a Postgres schema to be introspected. Use commas to define multiple schemas"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-S"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--subscriptions"),(0,i.kt)("br",{parentName:"li"}),"Enable GraphQL support for subscriptions (you still need a subscriptions\nplugin currently)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--websockets <string>"),(0,i.kt)("br",{parentName:"li"}),"Choose which websocket transport libraries to use. Use commas to define\nmultiple. Defaults to 'v0,v1' if ",(0,i.kt)("inlineCode",{parentName:"li"},"--subscriptions")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"--live")," were passed,\n'[]' otherwise"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--websocket-operations <operations>"),(0,i.kt)("br",{parentName:"li"}),"Toggle which GraphQL websocket transport operations are supported:\n'subscriptions' or 'all'. Defaults to 'subscriptions'"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-L"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--live"),(0,i.kt)("br",{parentName:"li"}),"[EXPERIMENTAL]"," Enables live-query support via GraphQL subscriptions (sends\nupdated payload any time nested collections/records change). Implies\n--subscriptions"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-w"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--watch"),(0,i.kt)("br",{parentName:"li"}),"automatically updates your GraphQL schema when your database schema changes\n(NOTE: requires DB superuser to install ",(0,i.kt)("inlineCode",{parentName:"li"},"postgraphile_watch")," schema)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-n"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--host <string>"),(0,i.kt)("br",{parentName:"li"}),"the hostname to be used. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"localhost")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-p"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--port <number>"),(0,i.kt)("br",{parentName:"li"}),"the port to be used. Defaults to 5000"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-m"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--max-pool-size <number>"),(0,i.kt)("br",{parentName:"li"}),"the maximum number of clients to keep in the Postgres pool. defaults to 10"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-r"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--default-role <string>"),(0,i.kt)("br",{parentName:"li"}),"the default Postgres role to use when a request is made. supercedes the role\nused to connect to the database"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--retry-on-init-fail"),(0,i.kt)("br",{parentName:"li"}),"if an error occurs building the initial schema, this flag will cause\nPostGraphile to keep trying to build the schema with exponential backoff\nrather than exiting"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-j"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--dynamic-json"),(0,i.kt)("br",{parentName:"li"}),"[RECOMMENDED]"," enable dynamic JSON in GraphQL inputs and outputs. PostGraphile\nuses stringified JSON by default"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-N"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--no-setof-functions-contain-nulls"),(0,i.kt)("br",{parentName:"li"}),"[RECOMMENDED]"," if none of your ",(0,i.kt)("inlineCode",{parentName:"li"},"RETURNS SETOF compound_type")," functions mix\nNULLs with the results then you may enable this to reduce the nullables in the\nGraphQL schema"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-a"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--classic-ids"),(0,i.kt)("br",{parentName:"li"}),"use classic global id field name. required to support Relay 1"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-M"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--disable-default-mutations"),(0,i.kt)("br",{parentName:"li"}),"disable default mutations, mutation will only be possible through Postgres\nfunctions"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--simple-collections <omit|both|only>"),(0,i.kt)("br",{parentName:"li"}),'"omit" (default) - relay connections only, "only" - simple collections only\n(no Relay connections), "both" - both'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--no-ignore-rbac"),(0,i.kt)("br",{parentName:"li"}),"[RECOMMENDED]"," set this to exclude fields, queries and mutations that are not\navailable to any possible user (determined from the user in connection string\nand any role they can become); this will be enabled by default in v5"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--no-ignore-indexes"),(0,i.kt)("br",{parentName:"li"}),"[RECOMMENDED]"," set this to exclude filters, orderBy, and relations that would\nbe expensive to access due to missing indexes"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--include-extension-resources"),(0,i.kt)("br",{parentName:"li"}),"by default, tables and functions that come from extensions are excluded; use\nthis flag to include them (not recommended)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--show-error-stack [json|string]"),(0,i.kt)("br",{parentName:"li"}),"show JavaScript error stacks in the GraphQL result errors (recommended in\ndevelopment)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--extended-errors <string>"),(0,i.kt)("br",{parentName:"li"}),"a comma separated list of extended Postgres error fields to display in the\nGraphQL result. Recommended in development: 'hint,detail,errcode'. Default:\nnone"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--append-plugins <string>"),(0,i.kt)("br",{parentName:"li"}),"a comma-separated list of plugins to append to the list of Graphile Engine\nschema plugins"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--prepend-plugins <string>"),(0,i.kt)("br",{parentName:"li"}),"a comma-separated list of plugins to prepend to the list of Graphile Engine\nschema plugins"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--skip-plugins <string>"),(0,i.kt)("br",{parentName:"li"}),"a comma-separated list of Graphile Engine schema plugins to skip"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--read-cache <path>"),(0,i.kt)("br",{parentName:"li"}),"[experimental]"," reads cached values from local cache file to improve startup\ntime (you may want to do this in production)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--write-cache <path>"),(0,i.kt)("br",{parentName:"li"}),"[experimental]"," writes computed values to local cache file so startup can be\nfaster (do this during the build phase)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--export-schema-json <path>"),(0,i.kt)("br",{parentName:"li"}),"enables exporting the detected schema, in JSON format, to the given location.\nThe directories must exist already, if the file exists it will be overwritten."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--export-schema-graphql <path>"),(0,i.kt)("br",{parentName:"li"}),"enables exporting the detected schema, in GraphQL schema format, to the given\nlocation. The directories must exist already, if the file exists it will be\noverwritten."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--sort-export"),(0,i.kt)("br",{parentName:"li"}),"lexicographically (alphabetically) sort exported schema for more stable\ndiffing."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-X"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--no-server"),(0,i.kt)("br",{parentName:"li"}),"[experimental]"," for when you just want to use --write-cache or\n--export-schema-","*"," and not actually run a server (e.g. CI)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-q"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--graphql <path>"),(0,i.kt)("br",{parentName:"li"}),"the route to mount the GraphQL server on. defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"/graphql")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-i"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--graphiql <path>"),(0,i.kt)("br",{parentName:"li"}),"the route to mount the GraphiQL interface on. defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"/graphiql")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--enhance-graphiql"),(0,i.kt)("br",{parentName:"li"}),"[DEVELOPMENT]"," opt in to additional GraphiQL functionality (this may change\nover time - only intended for use in development; automatically enables with\n",(0,i.kt)("inlineCode",{parentName:"li"},"subscriptions")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"live"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-b"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--disable-graphiql"),(0,i.kt)("br",{parentName:"li"}),"disables the GraphiQL interface. overrides the GraphiQL route option"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-o"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--cors"),(0,i.kt)("br",{parentName:"li"}),"enable generous CORS settings; disabled by default, if possible use a proxy\ninstead"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-l"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--body-size-limit <string>"),(0,i.kt)("br",{parentName:"li"}),"set the maximum size of the HTTP request body that can be parsed (default\n100kB). The size can be given as a human-readable string, such as '200kB' or\n'5MB' (case insensitive)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--timeout <number>"),(0,i.kt)("br",{parentName:"li"}),"set the timeout value in milliseconds for sockets"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--cluster-workers <count>"),(0,i.kt)("br",{parentName:"li"}),"[experimental]"," spawn ",(0,i.kt)("inlineCode",{parentName:"li"},"<count>")," workers to increase throughput"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--enable-query-batching"),(0,i.kt)("br",{parentName:"li"}),"[experimental]"," enable the server to process multiple GraphQL queries in one\nrequest"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--disable-query-log"),(0,i.kt)("br",{parentName:"li"}),"disable logging queries to console (recommended in production)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--allow-explain"),(0,i.kt)("br",{parentName:"li"}),"[EXPERIMENTAL]"," allows users to use the Explain button in GraphiQL to view the\nplan for the SQL that is executed (DO NOT USE IN PRODUCTION)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-e"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-secret <string>"),(0,i.kt)("br",{parentName:"li"}),"the secret to be used when creating and verifying JWTs. if none is provided\nauth will be disabled"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-verify-algorithms <string>"),(0,i.kt)("br",{parentName:"li"}),"a comma separated list of the names of the allowed jwt token algorithms"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-A"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-verify-audience <string>"),(0,i.kt)("br",{parentName:"li"}),"a comma separated list of JWT audiences that will be accepted; defaults to\n'postgraphile'. To disable audience verification, set to ''."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-verify-clock-tolerance <number>"),(0,i.kt)("br",{parentName:"li"}),"number of seconds to tolerate when checking the nbf and exp claims, to deal\nwith small clock differences among different servers"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-verify-id <string>"),(0,i.kt)("br",{parentName:"li"}),"the name of the allowed jwt token id"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-verify-ignore-expiration"),(0,i.kt)("br",{parentName:"li"}),"if ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," do not validate the expiration of the token defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"false")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-verify-ignore-not-before"),(0,i.kt)("br",{parentName:"li"}),"if ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," do not validate the notBefore of the token defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"false")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-verify-issuer <string>"),(0,i.kt)("br",{parentName:"li"}),"a comma separated list of the names of the allowed jwt token issuer"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-verify-subject <string>"),(0,i.kt)("br",{parentName:"li"}),"the name of the allowed jwt token subject"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-role <string>"),(0,i.kt)("br",{parentName:"li"}),"a comma seperated list of strings that create a path in the jwt from which to\nextract the postgres role. if none is provided it will use the key ",(0,i.kt)("inlineCode",{parentName:"li"},"role")," on\nthe root of the jwt."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-t"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-token-identifier <identifier>"),(0,i.kt)("br",{parentName:"li"}),"the Postgres identifier for a composite type that will be used to create JWT\ntokens"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--token <identifier>"),(0,i.kt)("br",{parentName:"li"}),"[DEPRECATED]"," Use --jwt-token-identifier instead. This option will be removed\nin v5."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--secret <string>"),(0,i.kt)("br",{parentName:"li"}),"[DEPRECATED]"," Use --jwt-secret instead. This option will be removed in v5."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--jwt-audiences <string>"),(0,i.kt)("br",{parentName:"li"}),"[DEPRECATED]"," Use --jwt-verify-audience instead. This option will be removed in\nv5."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--legacy-functions-only"),(0,i.kt)("br",{parentName:"li"}),"[DEPRECATED]"," PostGraphile 4.1.0 introduced support for PostgreSQL functions\nthan declare parameters with IN/OUT/INOUT or declare RETURNS TABLE(...);\nenable this flag to ignore these types of functions. This option will be\nremoved in v5."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--legacy-relations <omit|deprecated|only>"),(0,i.kt)("br",{parentName:"li"}),"some one-to-one relations were previously detected as one-to-many - should we\nexport 'only' the old relation shapes, both new and old but mark the old ones\nas 'deprecated', or 'omit' the old relation shapes entirely"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--legacy-json-uuid"),(0,i.kt)("br",{parentName:"li"}),"ONLY use this option if you require the v3 typenames 'Json' and 'Uuid' over\n'JSON' and 'UUID'"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-h"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--help"),(0,i.kt)("br",{parentName:"li"}),"output usage information")),(0,i.kt)("p",null,"The following options are not part of PostGraphile core, but are available from\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"@graphile/pg-pubsub")," ",(0,i.kt)("a",{parentName:"p",href:"./subscriptions/"},"subscriptions plugin"),' (formerly the\npaid "supporter" plugin, but now fully free and open source - please consider\n',(0,i.kt)("a",{parentName:"p",href:"https://graphile.org/sponsor/"},"sponsoring us"),"!):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-S"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"--simple-subscriptions")," add simple subscription support"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--subscription-authorization-function [fn]")," PG function to call to check user\nis allowed to subscribe.")),(0,i.kt)("p",null,"The following features and not part of PostGraphile core, but are available from\nthe Pro plugin - see ",(0,i.kt)("a",{parentName:"p",href:"/pricing/"},"Go Pro!")," for more information."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--read-only-connection <string>")," ",(0,i.kt)(r.Z,{mdxType:"Pro"})," ",(0,i.kt)(l.Z,{mdxType:"Spon"})," \u26a1\ufe0f","[experimental]"," a PostgreSQL\nconnection string to use for read-only queries (i.e. not mutations)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--default-pagination-cap [int]")," ",(0,i.kt)(r.Z,{mdxType:"Pro"})," ",(0,i.kt)(l.Z,{mdxType:"Spon"})," \u26a1\ufe0f","[experimental]"," Ensures all\nconnections have first/last specified and are no large than this value\n(default: 50), set to -1 to disable; override via smart comment\n",(0,i.kt)("inlineCode",{parentName:"li"},"@paginationCap 50")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--graphql-depth-limit [int]")," ",(0,i.kt)(r.Z,{mdxType:"Pro"})," ",(0,i.kt)(l.Z,{mdxType:"Spon"})," \u26a1\ufe0f","[experimental]"," Validates GraphQL\nqueries cannot be deeper than the specified int (default: 16), set to -1 to\ndisable"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--graphql-cost-limit [int]")," ",(0,i.kt)(r.Z,{mdxType:"Pro"})," ",(0,i.kt)(l.Z,{mdxType:"Spon"})," \u26a1\ufe0f","[experimental]"," Only allows queries with\na computed cost below the specified int (default: 1000), set to -1 to disable")),(0,i.kt)("h3",{id:"rc-file-options"},"RC file options"),(0,i.kt)("p",null,"The CLI options can also be specified in a ",(0,i.kt)("inlineCode",{parentName:"p"},".postgraphilerc.js")," file in the\ncurrent working directory. Any command line comma separated options (eg.\n",(0,i.kt)("inlineCode",{parentName:"p"},"schema"),") must be entered as Javascript arrays."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'module.exports = {\n  options: {\n    connection: "postgres://api_user:api_password@localhost/api_development",\n    schema: ["myApp", "myAppPrivate"],\n    jwtSecret: "myJwtSecret",\n    defaultRole: "myapp_anonymous",\n    jwtTokenIdentifier: "myApp.jwt_token",\n    watch: true,\n  },\n};\n')),(0,i.kt)("p",null,"Here is the list of keys and their default values, or types, supported in the\n",(0,i.kt)("inlineCode",{parentName:"p"},"options")," object returned by ",(0,i.kt)("inlineCode",{parentName:"p"},".postgraphilerc.js"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  appendPlugins: <string>\n  bodySizeLimit: <string>\n  classicIds = false\n  clusterWorkers: <integer>\n  connection: <string>\n  cors= false\n  defaultRole: <string>\n  disableDefaultMutations = false\n  disableGraphiql = false\n  disableQueryLog: true/false\n  dynamicJson = false\n  enableQueryBatching: true/false\n  exportSchemaGraphql: <path string>\n  exportSchemaJson: <path string>\n  extendedErrors = []\n  graphiql = '/graphiql'\n  graphql = '/graphql'\n  host = 'localhost'\n  includeExtensionResources = false\n  jwtAudiences: <string>\n  jwtRole = ['role']\n  jwtSecret: <string>\n  jwtSignOptions: {}\n  jwtTokenIdentifier\n  jwtVerifyAlgorithms: <string>\n  jwtVerifyAudience: <string>\n  jwtVerifyClockTolerance: <number>\n  jwtVerifyId: <string>\n  jwtVerifyIgnoreExpiration: true/false\n  jwtVerifyIgnoreNotBefore: true/false\n  jwtVerifyIssuer: <string>\n  jwtVerifySubject: <string>\n  legacyJsonUuid: true/false\n  maxPoolSize: <number>\n  plugins: <string>\n  port = 5000\n  prependPlugins: <string>\n  readCache: <path string>\n  schema: <string>\n  secret: <string>\n  showErrorStack: true/false\n  simpleCollections: [omit|both|only]\n  skipPlugins: <string>\n  timeout: <number>\n  token: : <string>\n  watch: true/false\n  writeCache: <path string>\n")),(0,i.kt)("p",null,"Please note that this interface is deprecated and will be removed in v5 (but its\nreplacement hasn't been built yet...). You're encouraged to use PostGraphile as\na library rather than using a ",(0,i.kt)("inlineCode",{parentName:"p"},".postgraphilerc.js"),"."))}h.isMDXComponent=!0},74224:(e,t,n)=>{n.d(t,{Z:()=>a});const a={contents:"contents_OrL_",content:"content_ilvp",row:"row_ARn8",header:"header_zTVt",footnote:"footnote_D0nB",footnoteText:"footnoteText_OEd0",note:"note_qBn0",small:"small_Gqq2",tagline:"tagline_Ld2x",tooltipped:"tooltipped_t_JO",tooltiptext:"tooltiptext_u7mD",proTag:"proTag_vRmB",sponTag:"sponTag_Nh0y",firstLetter:"firstLetter_NMLh"}}}]);