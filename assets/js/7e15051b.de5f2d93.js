"use strict";(self.webpackChunk_localrepo_grafast_website=self.webpackChunk_localrepo_grafast_website||[]).push([[8476],{30876:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,y=u["".concat(p,".").concat(m)]||u[m]||d[m]||s;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},53167:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(7896),a=(n(2784),n(30876));const s={},o="access",i={unversionedId:"step-library/standard-steps/access",id:"step-library/standard-steps/access",title:"access",description:"Accesses a (potentially nested) property from the result of a source step.",source:"@site/grafast/step-library/standard-steps/access.md",sourceDirName:"step-library/standard-steps",slug:"/step-library/standard-steps/access",permalink:"/grafast/step-library/standard-steps/access",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/grafast/website/grafast/step-library/standard-steps/access.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Standard steps",permalink:"/grafast/step-library/standard-steps/"},next:{title:"condition",permalink:"/grafast/step-library/standard-steps/condition"}},p={},l=[],c={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"access"},"access"),(0,a.kt)("p",null,"Accesses a (potentially nested) property from the result of a source step."),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"p"},"access()")," bypasses ",(0,a.kt)("inlineCode",{parentName:"p"},".get()")," / ",(0,a.kt)("inlineCode",{parentName:"p"},".at()"),", so you should only use it where doing\nso is truly what you mean. Always use a step's ",(0,a.kt)("inlineCode",{parentName:"p"},".get()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},".at()")," if present\nunless you know better."),(0,a.kt)("p",{parentName:"admonition"},"Many steps require that you use ",(0,a.kt)("inlineCode",{parentName:"p"},".get()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},".at()")," in order to function\nproperly, for example if you don't call ",(0,a.kt)("inlineCode",{parentName:"p"},".get('attribute_name')")," on a ",(0,a.kt)("a",{parentName:"p",href:"/grafast/step-library/standard-steps/loadOne"},(0,a.kt)("inlineCode",{parentName:"a"},"loadOne()"),"\nstep")," then it won't know to request the ",(0,a.kt)("inlineCode",{parentName:"p"},"attribute_name")," attribute,\nand you may end up with unexpected nulls/undefineds.")),(0,a.kt)("p",null,"Usage:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const $userId = access($user, "id");\nconst $firstPatchUserId = access($args.get("input"), [\n  "patches",\n  0,\n  "user",\n  "id",\n]);\n')),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"This could lead to unexpected results (which could introduce security issues) if\nit is not used carefully; only use it on JSON-like data, preferably where the\nobjects have null prototypes, and only access keys that you trust (do not use\nuser-provided data for the path!)")),(0,a.kt)("p",null,"An ",(0,a.kt)("inlineCode",{parentName:"p"},"AccessStep")," has the following methods:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".get(key)")," - gets the value for the key ",(0,a.kt)("inlineCode",{parentName:"li"},"key")," assuming the parsed JSON value\nwas an object"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".at(index)")," - gets the value at index ",(0,a.kt)("inlineCode",{parentName:"li"},"index")," assuming the parsed JSON value\nwas an array")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"function access<TData>(\n  $source: ExecutableStep<unknown>,\n  path: (string | number)[] | string | number,\n  fallback?: any,\n): AccessStep<TData>;\n")))}d.isMDXComponent=!0}}]);