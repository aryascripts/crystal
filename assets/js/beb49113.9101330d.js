"use strict";(self.webpackChunk_localrepo_grafast_website=self.webpackChunk_localrepo_grafast_website||[]).push([[594],{45718:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var t=a(7896),s=(a(2784),a(30876)),n=a(36702);const o={},i="Servers",d={unversionedId:"servers/index",id:"servers/index",title:"Servers",description:"Grafserv has support for a number of Node.js webservers built in, and you can",source:"@site/grafserv/servers/index.mdx",sourceDirName:"servers",slug:"/servers/",permalink:"/grafserv/servers/",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/grafast/website/grafserv/servers/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Grafserv Introduction",permalink:"/grafserv/"},next:{title:"Express V4",permalink:"/grafserv/servers/express"}},p={},u=[{value:"Sequence diagram",id:"sequence-diagram",level:2}],c={toc:u},v="wrapper";function l(e){let{components:r,...a}=e;return(0,s.kt)(v,(0,t.Z)({},c,a,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"servers"},"Servers"),(0,s.kt)("p",null,"Grafserv has support for a number of Node.js webservers built in, and you can\nbuild an adaptor to make Grafserv compatible with your server of choice."),(0,s.kt)("p",null,"Please see the subpages for the builtin webserver support."),(0,s.kt)("h2",{id:"sequence-diagram"},"Sequence diagram"),(0,s.kt)("p",null,"If you plan to implement your own Grafserv adaptor (rather than using a built\nin one), this sequence diagram may aid your understanding:"),(0,s.kt)(n.Z,{chart:"sequenceDiagram\n  participant Server as Server Framework\n  participant Adaptor as Grafserv Adaptor\n  participant Grafserv as Grafserv Core\n  Server->>Adaptor: Framework request object\n  Adaptor->>Grafserv: Normalized request digest<br/>(method, path, headers, etc)\n  opt For POST requests\n    Grafserv--)Adaptor: Get request body\n    Adaptor--)Server: Fetch body\n    Server--)Adaptor: Framework specific body<br/>(Buffer, JSON, text, etc)\n    Adaptor--)Grafserv: Normalized body\n  end\n  Grafserv-)Grafserv: Compute GraphQL Result\n  Grafserv->>Adaptor: Grafserv response<br/>(JSON, text, stream, etc)\n  Adaptor->>Server: Framework response\n",mdxType:"Mermaid"}))}l.isMDXComponent=!0},36702:(e,r,a)=>{a.d(r,{Z:()=>n});var t=a(48084),s=a(2784);t.o.initialize({startOnLoad:!0,flowchart:{diagramPadding:8,nodeSpacing:20,rankSpacing:40,htmlLabels:!0}});const n=e=>{let{chart:r}=e;return(0,s.useEffect)((()=>{t.o.contentLoaded()}),[]),s.createElement("div",{className:"mermaid"},r)}}}]);