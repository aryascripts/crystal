"use strict";(self.webpackChunk_localrepo_graphile_build_website=self.webpackChunk_localrepo_graphile_build_website||[]).push([[915],{876:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var n=a(2784);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),h=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=h(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,p=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=h(a),m=r,c=u["".concat(o,".").concat(m)]||u[m]||d[m]||p;return a?n.createElement(c,i(i({ref:t},s),{},{components:a})):n.createElement(c,i({ref:t},s))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=a.length,i=new Array(p);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var h=2;h<p;h++)i[h]=a[h];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8701:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>p,metadata:()=>l,toc:()=>h});var n=a(7896),r=(a(2784),a(876));const p={layout:"page",path:"/graphile-build/all-hooks/",title:"All Hooks",sidebar_position:4},i=void 0,l={unversionedId:"all-hooks",id:"all-hooks",title:"All Hooks",description:"The following hooks are currently supported, but more may be added in future.",source:"@site/graphile-build/all-hooks.md",sourceDirName:".",slug:"/all-hooks",permalink:"/graphile-build/all-hooks",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/graphile-build/website/graphile-build/all-hooks.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{layout:"page",path:"/graphile-build/all-hooks/",title:"All Hooks",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Hooks",permalink:"/graphile-build/hooks"},next:{title:"The Build Object",permalink:"/graphile-build/build-object"}},o={},h=[{value:"Input types",id:"input-types",level:3}],s={toc:h},u="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The following hooks are currently supported, but more may be added in future.\nTrying to add a hook for a hook name that does not exist will result in an\nerror."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"build"),": The build object represents the current schema build and is passed\nto all hooks, hook the 'build' event to extend this object. GraphQL types\nshould not be constructed during this phase.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"init"),": The init event is triggered after ",(0,r.kt)("inlineCode",{parentName:"p"},"build")," and should be used to\nregister the GraphQL type names and their specifications for types that may be\nuseful later. The argument to this is an opaque object and should be passed\nthrough unmodified (it currently is an empty object that gets ignored).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"GraphQLSchema"),": This event defines the root-level schema configuration; hook\nit to add ",(0,r.kt)("inlineCode",{parentName:"p"},"query"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"mutation"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"subscription")," root operations or similar\noptions.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"GraphQLObjectType*"),": When creating a GraphQLObjectType,\nwe'll execute the following hooks:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLObjectType")," to add any root-level attributes, e.g. a description."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLObjectType_interfaces")," to add additional interfaces to this object\ntype."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLObjectType_fields")," (",(0,r.kt)("em",{parentName:"li"},"deferred"),") to add additional fields to this\nobject type. It is ran asynchronously (by passing ",(0,r.kt)("inlineCode",{parentName:"li"},"fields")," as a thunk to\n",(0,r.kt)("a",{parentName:"li",href:"https://graphql.org/graphql-js/type/#graphqlobjecttype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLObjectType")),")\nand gets a reference to the final GraphQL Type as ",(0,r.kt)("inlineCode",{parentName:"li"},"Self")," in the context."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLObjectType_fields_field"),": to manipulate any root-level attributes on\nan individual field, e.g. add a description."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLObjectType_fields_field_args")," to add arguments of an individual\nfield."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLObjectType_fields_field_args_arg")," to modify a specific argument."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"GraphQLInputObjectType*"),": When creating a GraphQLInputObjectType, we'll execute the following hooks:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLInputObjectType")," to add any root-level attributes, e.g. a\ndescription."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLInputObjectType_fields")," (",(0,r.kt)("em",{parentName:"li"},"deferred"),") to add additional fields to\nthis input type. It is ran asynchronously (by passing ",(0,r.kt)("inlineCode",{parentName:"li"},"fields")," as a thunk to\n",(0,r.kt)("a",{parentName:"li",href:"https://graphql.org/graphql-js/type/#graphqlinputobjecttype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLInputObjectType")),")\nand gets a reference to the final GraphQL Type as ",(0,r.kt)("inlineCode",{parentName:"li"},"Self")," in the context."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLInputObjectType_fields_field"),": to customize an individual field from\nabove."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"GraphQLEnumType*"),": When creating a GraphQLEnumType, we'll\nexecute the following hooks:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLEnumType")," add any root-level attributes, e.g. add a description."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLEnumType_values")," add values."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GraphQLEnumType_values_value")," customize an individual value from above."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"finalize"),": This event is triggered when the schema has been constructed, hook\nit to modify or wrap the built schema instance."))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This documentation does NOT contains all the hooks.")),(0,r.kt)("p",null,'The "(deferred)" hooks above (and their descendents) are not called until\n',(0,r.kt)("em",{parentName:"p"},"after")," the object is constructed (which means they can reference the object\nitself - allowing circular references such as ",(0,r.kt)("inlineCode",{parentName:"p"},"type Query { query: Query }"),");\nGraphQL will automatically call them when ",(0,r.kt)("inlineCode",{parentName:"p"},"Type.getFields()")," is called, which\nmay still be within the same tick - i.e. they are not necessarily fully\nasynchronous."),(0,r.kt)("h3",{id:"input-types"},"Input types"),(0,r.kt)("p",null,"Depending on the hook being called the input object might be an array (as in the\ncase of ",(0,r.kt)("inlineCode",{parentName:"p"},"GraphQLObjectType_interfaces"),") or an object (as in all other cases,\ncurrently). More specifically, the types for each hook are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"inflection - a plain object with some core inflection methods, built in\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/graphile/graphile-engine/blob/v4.4.4/packages/graphile-build/src/makeNewBuild.js#L929-L997"},(0,r.kt)("inlineCode",{parentName:"a"},"makeNewBuild")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"build - a ",(0,r.kt)("a",{parentName:"p",href:"/graphile-build/build-object/"},(0,r.kt)("inlineCode",{parentName:"a"},"Build")," object"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"init - an opaque object, please just return it verbatim")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLSchema -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlschema"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLSchemaConfig")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLObjectType -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlobjecttype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLObjectTypeConfig")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLObjectType_interfaces -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlinterfacetype"},"array of ",(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLInterfaceType")," instances"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLObjectType_fields -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlobjecttype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLFieldConfigMap")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLObjectType_fields_field -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlobjecttype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLFieldConfig")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLObjectType_fields_field_args -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlobjecttype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLFieldConfigArgumentMap")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLInputObjectType -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlinputobjecttype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLInputObjectTypeConfig")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLInputObjectType_fields -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlinputobjecttype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLInputObjectConfigFieldMap")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLInputObjectType_fields_field -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlinputobjecttype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLInputObjectFieldConfig")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLEnumType -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlenumtype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLEnumTypeConfig")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLEnumType_values -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlenumtype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLEnumValueConfigMap")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"GraphQLEnumType_values_value -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlenumtype"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLEnumValueConfig")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"finalize -\n",(0,r.kt)("a",{parentName:"p",href:"http://graphql.org/graphql-js/type/#graphqlschema"},(0,r.kt)("inlineCode",{parentName:"a"},"GraphQLSchema"))))))}d.isMDXComponent=!0}}]);