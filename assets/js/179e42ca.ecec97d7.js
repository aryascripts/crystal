"use strict";(self.webpackChunk_localrepo_star_website=self.webpackChunk_localrepo_star_website||[]).push([[9782],{876:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(2784);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(r),f=o,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||a;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7744:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=r(7896),o=(r(2784),r(876));const a={sidebar_position:7,title:"te.safeKeyOrThrow()"},i="te.safeKeyOrThrow(ident, forceQuotes = false)",s={unversionedId:"api/te-safe-key-or-throw",id:"api/te-safe-key-or-throw",title:"te.safeKeyOrThrow()",description:"Takes ident and turns it into the representation of a safely escaped",source:"@site/tamedevil/api/te-safe-key-or-throw.md",sourceDirName:"api",slug:"/api/te-safe-key-or-throw",permalink:"/tamedevil/api/te-safe-key-or-throw",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/utils/website/tamedevil/api/te-safe-key-or-throw.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"te.safeKeyOrThrow()"},sidebar:"tutorialSidebar",previous:{title:"te.identifier()",permalink:"/tamedevil/api/te-identifier"},next:{title:"te.get()",permalink:"/tamedevil/api/te-get"}},p={},l=[],c={toc:l},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tesafekeyorthrowident-forcequotes--false"},(0,o.kt)("inlineCode",{parentName:"h1"},"te.safeKeyOrThrow(ident, forceQuotes = false)")),(0,o.kt)("p",null,"Takes ",(0,o.kt)("inlineCode",{parentName:"p"},"ident")," and turns it into the representation of a safely escaped\nJavaScript object key (to be used in an object definition). We do our best to\nnot put quote marks around the key unless necessary (or ",(0,o.kt)("inlineCode",{parentName:"p"},"forceQuotes")," is set),\nso that the output code is more pleasant to read."),(0,o.kt)("p",null,"We'll throw an error if you pass an ",(0,o.kt)("inlineCode",{parentName:"p"},"ident")," that contains unexpected characters,\nthis is intended to be used with relatively straightforward strings\n(",(0,o.kt)("inlineCode",{parentName:"p"},"/[$@A-Za-z0-9_.-]+$/"),"). We also forbid common attack vectors such as\n",(0,o.kt)("inlineCode",{parentName:"p"},"__proto__"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"constructor"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"hasOwnProperty"),", etc. (For the full list, evaluate\n",(0,o.kt)("inlineCode",{parentName:"p"},"Object.getOwnPropertyNames(Object.prototype)"),".)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"IMPORTANT"),": It's strongly recommended that instead of defining an object via\n",(0,o.kt)("inlineCode",{parentName:"p"},"const obj = { ${te.safeKeyOrThrow(untrustedKey)}: value }")," you instead use\n",(0,o.kt)("inlineCode",{parentName:"p"},"const obj = Object.create(null);")," and then set the properties on the resulting\nobject via ",(0,o.kt)("inlineCode",{parentName:"p"},"${obj}[${te.lit(untrustedKey)}] = value;")," - this prevents attacks\nsuch as ",(0,o.kt)("strong",{parentName:"p"},"prototype polution")," since properties like ",(0,o.kt)("inlineCode",{parentName:"p"},"__proto__")," are not special\non null-prototype objects, whereas they can cause havok in regular ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")," objects."))}d.isMDXComponent=!0}}]);