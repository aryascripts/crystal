"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[4987],{30876:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(2784);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),h=o,m=d["".concat(p,".").concat(h)]||d[h]||c[h]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},67502:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7896),o=(n(2784),n(30876));const a={layout:"page",path:"/postgraphile/deploying-heroku/",title:"Deploying to Heroku"},i=void 0,l={unversionedId:"deploying-heroku",id:"deploying-heroku",title:"Deploying to Heroku",description:"This documentation is copied from Version 4 and has not been updated to Version",source:"@site/postgraphile/deploying-heroku.md",sourceDirName:".",slug:"/deploying-heroku",permalink:"/postgraphile/next/deploying-heroku",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/postgraphile/deploying-heroku.md",tags:[],version:"current",frontMatter:{layout:"page",path:"/postgraphile/deploying-heroku/",title:"Deploying to Heroku"},sidebar:"docs",previous:{title:"Custom plugins",permalink:"/postgraphile/next/migrating-from-v4/migrating-custom-plugins"},next:{title:"Deploying with Docker",permalink:"/postgraphile/next/deploying-docker"}},p={},s=[{value:"AWS RDS",id:"aws-rds",level:3},{value:"Heroku Postgres",id:"heroku-postgres",level:3},{value:"Minimal setup, using PostGraphile CLI",id:"minimal-setup-using-postgraphile-cli",level:3},{value:"More detailed setup, using PostGraphile as a library",id:"more-detailed-setup-using-postgraphile-as-a-library",level:3},{value:"Cleanup",id:"cleanup",level:3}],u={toc:s},d="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This documentation is copied from Version 4 and has not been updated to Version\n5 yet; it may not be valid.")),(0,o.kt)("p",null,"It's possible to use PostGraphile on Heroku with either AWS RDS or Heroku\nPostgres."),(0,o.kt)("h3",{id:"aws-rds"},"AWS RDS"),(0,o.kt)("p",null,"We recommend using an Amazon RDS PostgreSQL database with Heroku since Heroku\nPostgres does not allow the issue of ",(0,o.kt)("inlineCode",{parentName:"p"},"CREATE ROLE")," commands. (This can be worked\naround, see below.)"),(0,o.kt)("p",null,"You should enable the ",(0,o.kt)("inlineCode",{parentName:"p"},"force_ssl")," setting in RDS, and to ensure PostGraphile\nconnects to RDS using SSL you need to add ",(0,o.kt)("inlineCode",{parentName:"p"},"?ssl=true")," to the connection string,\ne.g.\n",(0,o.kt)("inlineCode",{parentName:"p"},'heroku config:set DATABASE_URL="postgres://...rdshost.../db_name?ssl=true"')),(0,o.kt)("h3",{id:"heroku-postgres"},"Heroku Postgres"),(0,o.kt)("p",null,"It is also possible to use PostGraphile with Heroku Postgres too with a bit more\nsetup (and money!)."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a database if not already. The database must be of the Standard-0 tier\n(\\$50/month) or higher, otherwise you will not be able to create additional\ncredentials."),(0,o.kt)("li",{parentName:"ol"},"Create credentials on ",(0,o.kt)("a",{parentName:"li",href:"https://data.heroku.com"},"https://data.heroku.com")," for each Postgres role that you\nwish to use. For example, create a credential for ",(0,o.kt)("inlineCode",{parentName:"li"},"postgraphile")," (which your\napp will use to log in with) and ",(0,o.kt)("inlineCode",{parentName:"li"},"postgraphile_visitor")," (which PostGraphile\nshould switch into for each request)."),(0,o.kt)("li",{parentName:"ol"},"Attach the ",(0,o.kt)("inlineCode",{parentName:"li"},"postgraphile")," credential to your app, so that there should now be\ntwo credentials attached to your app (",(0,o.kt)("inlineCode",{parentName:"li"},"default")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"postgraphile"),")."),(0,o.kt)("li",{parentName:"ol"},"Use the ",(0,o.kt)("inlineCode",{parentName:"li"},"POSTGRAPHILE")," environment variable instead of ",(0,o.kt)("inlineCode",{parentName:"li"},"DATABASE_URL")," in your\napp's code to connect to Postgres with this credential."),(0,o.kt)("li",{parentName:"ol"},"Don't forget to use SSL too (e.g. with the env var ",(0,o.kt)("inlineCode",{parentName:"li"},"PGSSLMODE=require"),")!")),(0,o.kt)("p",null,"See: ",(0,o.kt)("a",{parentName:"p",href:"https://devcenter.heroku.com/articles/heroku-postgresql-credentials"},"https://devcenter.heroku.com/articles/heroku-postgresql-credentials")),(0,o.kt)("h3",{id:"minimal-setup-using-postgraphile-cli"},"Minimal setup, using PostGraphile CLI"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a project directory ",(0,o.kt)("inlineCode",{parentName:"li"},"mkdir project_folder_name")),(0,o.kt)("li",{parentName:"ol"},"Go into that directory and initialise git:\n",(0,o.kt)("inlineCode",{parentName:"li"},"cd project_folder_name && git init")),(0,o.kt)("li",{parentName:"ol"},"Add postgraphile: ",(0,o.kt)("inlineCode",{parentName:"li"},"yarn add postgraphile")),(0,o.kt)("li",{parentName:"ol"},"Commit everything: ",(0,o.kt)("inlineCode",{parentName:"li"},'git add . && git commit -m "Initial commit"')),(0,o.kt)("li",{parentName:"ol"},"Add the heroku remote ",(0,o.kt)("inlineCode",{parentName:"li"},"heroku git:remote -a heroku_app_name")),(0,o.kt)("li",{parentName:"ol"},"Configure Heroku to use the right url\n",(0,o.kt)("inlineCode",{parentName:"li"},'heroku config:set RDS_URL="postgres://user:pass@rdshost/dbname?ssl=true" -a heroku_app_name')),(0,o.kt)("li",{parentName:"ol"},"Create Procfile:\n",(0,o.kt)("inlineCode",{parentName:"li"},"echo 'web: postgraphile -c $RDS_URL --host 0.0.0.0 --port $PORT' >> Procfile")),(0,o.kt)("li",{parentName:"ol"},"Deploy: ",(0,o.kt)("inlineCode",{parentName:"li"},"git push heroku master"))),(0,o.kt)("h3",{id:"more-detailed-setup-using-postgraphile-as-a-library"},"More detailed setup, using PostGraphile as a library"),(0,o.kt)("p",null,"This walkthrough assumes you have a local git repository containing your\nproject."),(0,o.kt)("p",null,"First, you need to create a ",(0,o.kt)("inlineCode",{parentName:"p"},"Procfile")," file in the root of your repo, telling\nHeroku what to run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"web: yarn start\n")),(0,o.kt)("p",null,"You may also want to ensure that your ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," contains a ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," script\nthat builds your app (e.g. calling ",(0,o.kt)("inlineCode",{parentName:"p"},"tsc")," if you're using TypeScript), and that\nyou have ",(0,o.kt)("inlineCode",{parentName:"p"},"engines")," defined to tell Heroku which version of Node to use:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'  "scripts": {\n    "build": "tsc",\n    "start": "node server.js",\n  },\n  "engines": {\n    "node": "12.x"\n  }\n')),(0,o.kt)("p",null,"Commit all this."),(0,o.kt)("p",null,"Once your database server is running and the database and relevant roles have\nbeen created, you need to do the following (note: many of these commands can\ninstead be accomplished with the Heroku web interface):"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://devcenter.heroku.com/articles/creating-apps"},"Create the Heroku app"),"\ne.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"heroku create myappname")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://devcenter.heroku.com/articles/config-vars"},"Set Heroku config variables"),"\ne.g.",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'heroku config:set \\\n    NODE_ENV="production" \\\n    GRAPHILE_TURBO="1" \\\n    DATABASE_URL="postgres://username:password@host:port/dbname?ssl=true" \\\n    -a myappname\n'))),(0,o.kt)("li",{parentName:"ul"},"Add the Heroku app as a git remote to your local repository, e.g.\n",(0,o.kt)("inlineCode",{parentName:"li"},"git remote add heroku git@heroku.com:myappname.git")," (make sure you've\n",(0,o.kt)("a",{parentName:"li",href:"https://devcenter.heroku.com/articles/keys"},"uploaded your SSH key to Heroku"),")"),(0,o.kt)("li",{parentName:"ul"},"Push the ",(0,o.kt)("inlineCode",{parentName:"li"},"master")," branch from your repo to Heroku to perform your initial\nbuild: ",(0,o.kt)("inlineCode",{parentName:"li"},"git push heroku master"))),(0,o.kt)("p",null,"You should see the build scrolling past; if it fails then you should be able to\nsee why and address it. If it succeeds then your application should be available\nat ",(0,o.kt)("inlineCode",{parentName:"p"},"https://<myappname>.herokuapp.com")),(0,o.kt)("p",null,"For a more in-depth and automated setup, including instructions on configuring a\njob queue and sending emails, see the\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/graphile/starter#deploying-to-heroku"},"Deploying to Heroku instructions in Graphile Starter"),".\n(NOTE: at time of writing, Graphile Starter is under development and is only\navailable to sponsors \u2500 reach out in Discord for early access.)"),(0,o.kt)("h3",{id:"cleanup"},"Cleanup"),(0,o.kt)("p",null,"To delete the Heroku app:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"heroku apps:destroy -a myappname\n")))}c.isMDXComponent=!0}}]);