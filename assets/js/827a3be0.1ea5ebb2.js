"use strict";(self.webpackChunk_localrepo_postgraphile_website=self.webpackChunk_localrepo_postgraphile_website||[]).push([[7229],{30876:(e,t,i)=>{i.d(t,{Zo:()=>m,kt:()=>c});var a=i(2784);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var p=a.createContext({}),s=function(e){var t=a.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,r=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(i),g=n,c=u["".concat(p,".").concat(g)]||u[g]||h[g]||r;return i?a.createElement(c,o(o({ref:t},m),{},{components:i})):a.createElement(c,o({ref:t},m))}));function c(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=i.length,o=new Array(r);o[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:n,o[1]=l;for(var s=2;s<r;s++)o[s]=i[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,i)}g.displayName="MDXCreateElement"},37762:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=i(7896),n=(i(2784),i(30876));const r={layout:"page",path:"/postgraphile/community-plugins/",title:"PostGraphile community plugins"},o=void 0,l={unversionedId:"community-plugins",id:"community-plugins",title:"PostGraphile community plugins",description:"Community members can write plugins for PostGraphile that extends its",source:"@site/postgraphile/community-plugins.md",sourceDirName:".",slug:"/community-plugins",permalink:"/postgraphile/next/community-plugins",draft:!1,editUrl:"https://github.com/graphile/crystal/tree/main/postgraphile/website/postgraphile/community-plugins.md",tags:[],version:"current",frontMatter:{layout:"page",path:"/postgraphile/community-plugins/",title:"PostGraphile community plugins"},sidebar:"docs",previous:{title:"PostGraphile Plugin Gallery",permalink:"/postgraphile/next/plugin-gallery"},next:{title:"Server plugins",permalink:"/postgraphile/next/plugins"}},p={},s=[],m={toc:s},u="wrapper";function h(e){let{components:t,...i}=e;return(0,n.kt)(u,(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Community members can write plugins for PostGraphile that extends its\nfunctionality; this page lists some of them. Issues with these plugins should be\ndirected to the plugin authors, not to this project. This page is maintained by\nthe community and is not an endorsement by the project."),(0,n.kt)("p",null,'If you have written a PostGraphile plugin (or have found one that is not listed\nhere), then please feel free to add it, you can use the "edit this page" link\nto do so.'),(0,n.kt)("p",null,"See ",(0,n.kt)("a",{parentName:"p",href:"./config/"},"the configuration docs")," for how to load\nplugins."),(0,n.kt)("p",null,"Schema extension plugins for PostGraphile:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/graphile-contrib/postgraphile-plugin-connection-filter"},"postgraphile-plugin-connection-filter")," -\nadds a ",(0,n.kt)("inlineCode",{parentName:"li"},"filter:")," arg to connections that offers a more powerful alternative to\nthe built in filtering operations \u2705"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/graphile/pg-aggregates"},"@graphile/pg-aggregates")," - aggregate support on connections \u2705"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/graphile/crystal/tree/main/graphile-build/graphile-simplify-inflection"},"@graphile/simplify-inflection")," -\nsimplifies field names by automatically removing ",(0,n.kt)("inlineCode",{parentName:"li"},"ByFooIdAndBarId"),"-style\nsuffixes. \u2705"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/graphile-contrib/pg-omit-archived"},"@graphile-contrib/pg-omit-archived")," -\nallows soft-deletes and automatic hiding of records with a particular flag \u2705"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/graphile-contrib/pg-many-to-many"},"@graphile-contrib/pg-many-to-many")," -\nadds connection fields for many-to-many relations. \u2705"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hansololai/postgraphile-connection-filter-polymorphic"},"postgraphile-plugin-connection-filter-polymorphic")," -\nadds association filter on top of connection filter for polymorphic\nassociations. \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/postgraphile-polymorphic-relation-plugin"},"postgraphile-polymorphic-relation-plugin")," -\ncreate associations (forward and backward) between models via polymorphic\nassociations. (same concept as\npostgraphile-plugin-connection-filter-polymorphic). \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hansololai/postgraphile-index-to-unique-constraint-plugin"},"postgraphile-index-to-unique-constraint-plugin")," -\nextends PostGraphile's unique constraint detection to unique indexes also. \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/hansololai/postgraphile-table-extension-plugin"},"postgraphile-table-extension-plugin")," -\nextend a table's fields (non-association) to another table via unique foreign\nkey constraint. Useful for vertical partitioned tables. \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/RoadRunnerEngineering/postgraphile-plugin-custom-filter"},"postgraphile-plugin-custom-filter")," -\nadds a ",(0,n.kt)("inlineCode",{parentName:"li"},"customFilter:")," arg to connections that offers user defined filters on\nany conditions, as long as they can be fit into a ",(0,n.kt)("inlineCode",{parentName:"li"},"where")," \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/EmperorRXF/postgraphile-plugin-atomic-mutations"},"postgraphile-plugin-atomic-mutations")," -\nenables mutation atomicity with GraphQL requests containing multiple mutations \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mlipscombe/postgraphile-plugin-nested-mutations"},"postgraphile-plugin-nested-mutations")," -\nenables a single mutation to create/update many related records \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/einarjegorov/graphile-upsert-plugin/blob/master/index.js"},"graphile-upsert-plugin")," -\nadds upsert mutations \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jashmenn/postgraphile-upsert-plugin"},"@fullstackio/postgraphile-upsert-plugin")," -\nanother upsert mutations plugin - adds upsert ",(0,n.kt)("inlineCode",{parentName:"li"},"where")," conditions \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/graphile-contrib/pg-order-by-related"},"@graphile-contrib/pg-order-by-related")," -\nenables ordering by related table columns. \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/graphile-contrib/pg-order-by-multi-column-index"},"@graphile-contrib/pg-order-by-multi-column-index")," -\nenables ordering by multi-column indexes when using ",(0,n.kt)("inlineCode",{parentName:"li"},"ignoreIndexes: false"),". \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mattbretl/postgraphile-plugin-derived-field"},"postgraphile-plugin-derived-field")," -\nprovides an interface for adding derived fields \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mattbretl/postgraphile-plugin-upload-field"},"postgraphile-plugin-upload-field")," -\nenables file uploads (see ",(0,n.kt)("inlineCode",{parentName:"li"},"postgraphile-upload-example")," below) \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/deden/postgraphile-plugin-connection-multi-tenant"},"postgraphile-plugin-connection-multi-tenant"),' -\n"Filtering Connections in PostGraphile by Tenants" \u2753',(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/singingwolfboy/graphile-build-postgis"},"graphile-build-postgis")," -\nPostGIS support (WIP) \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/stlbucket/philede/blob/master/api/src/graphile-extensions/pm2Status.js"},"postgraphile-pm2-status")," -\nexpose pm2 process status thru a query \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/graphile/examples/blob/master/shared/plugins/PassportLoginPlugin.js"},"PassportLoginPlugin")," -\nexample plugin to add a username/password ",(0,n.kt)("inlineCode",{parentName:"li"},"login")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"register")," mutations\nusing Passport.js \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mlipscombe/postgraphile-plugin-fulltext-filter"},"postgraphile-plugin-fulltext-filter")," -\nadds support for ",(0,n.kt)("inlineCode",{parentName:"li"},"tsvector")," full text search fields to\npostgraphile-plugin-connection-filter \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mlipscombe/postgraphile-plugin-zombodb"},"postgraphile-plugin-zombodb")," -\nadds advanced search capabilities using\n",(0,n.kt)("a",{parentName:"li",href:"https://github.com/zombodb/zombodb"},"ZomboDB")," and ElasticSearch \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tjmoses/postgraphile-plugin-many-create-update-delete"},"postgraphile-plugin-many-create-update-delete")," -\ngenerates batch create, update, & delete mutations \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/pyramation/graphile-column-privileges-mutations"},"graphile-column-privileges-mutations")," -\ngenerates mutations safe to use with column-level select grants \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5; but not needed?)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jarvisuser90/postgraphile-remove-foreign-key-fields-plugin"},"postgraphile-remove-foreign-key-fields-plugin")," -\nRemoves all foreign key fields from the GraphQL schema while still allowing\nforeign relationships to be created. \u2753",(0,n.kt)("em",{parentName:"li"},'(Not yet ported to V5, but use the "relay" preset instead?)')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/RedShift1/postgraphile-plugin-timestamp-format"},"postgraphile-plugin-timestamp-format")," -\nFormat timestamps with PostgreSQL's to",(0,n.kt)("em",{parentName:"li"},"char function. Supports timezones too \u2753"),"(Not yet ported to V5)","_")),(0,n.kt)("p",null,"Examples of using these plugins:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mattbretl/postgraphile-upload-example"},"postgraphile-upload-example")," -\ndemonstrates how to add file upload support to PostGraphile using the GraphQL\nMultipart Request Spec. \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)"))),(0,n.kt)("p",null,"These extensions extend PostGraphile in different ways:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/benjie/crystal/blob/main/grafast/grafserv-persisted"},"@grafserv/persisted")," -\nadds support for persisted operations to Grafserv (and thus PostGraphile)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/mshick/hapi-postgraphile"},"hapi-postgraphile")," - add\nPostGraphile to your HAPI application \u2753",(0,n.kt)("em",{parentName:"li"},"(Not yet ported to V5)"))))}h.isMDXComponent=!0}}]);